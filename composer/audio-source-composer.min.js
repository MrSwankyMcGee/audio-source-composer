(function(){class AudioSourceComposerElement extends HTMLElement{constructor(){super(),this.saveSongToMemoryTimer=null,this.instrumentLibrary=null,this.longPressTimeout=null,this.values=new AudioSourceComposerValues(this),this.webSocket=new AudioSourceComposerWebsocket(this),this.keyboard=new AudioSourceComposerKeyboard(this),this.renderer=new AudioSourceRenderer(this),this.status={groupHistory:[],currentOctave:3,currentInstrumentID:0,currentRenderDuration:null,previewInstructionsOnSelect:!1,longPressTimeout:500,autoSaveTimeout:4e3}}get grid(){return this.shadowDOM.querySelector("asc-tracker")}get menu(){return this.shadowDOM.querySelector("asc-menu")}get forms(){return this.shadowDOM.querySelector("asc-forms")}get instruments(){return this.shadowDOM.querySelector("asc-instruments")}get container(){return this.shadowDOM.querySelector(".asc-container")}connectedCallback(){this.shadowDOM=this.attachShadow({mode:"open"});const e=e=>this.onInput(e);this.shadowDOM.addEventListener("submit",e),this.shadowDOM.addEventListener("change",e),this.shadowDOM.addEventListener("blur",e),this.shadowDOM.addEventListener("keydown",e),this.shadowDOM.addEventListener("contextmenu",e),this.shadowDOM.addEventListener("mousedown",e),this.shadowDOM.addEventListener("mouseup",e),this.shadowDOM.addEventListener("longpress",e);const t=e=>this.onSongEvent(e);this.addEventListener("song:loaded",t),this.addEventListener("song:start",t),this.addEventListener("song:end",t),this.addEventListener("song:pause",t),this.addEventListener("song:modified",t),this.addEventListener("note:play",t),this.addEventListener("instrument:loaded",t),this.addEventListener("instrument:instance",t),this.addEventListener("instrument:library",t),this.render(),this.focus();const s=this.getAttribute("src");s?this.loadSongFromSrc(s):this.loadRecentSongData(),navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(e=>{console.log("MIDI initialized",e);const t=[];e.inputs.forEach(e=>{t.push(e),e.addEventListener("midimessage",e=>this.onInput(e))}),console.log("MIDI input devices detected: "+t.map(e=>e.name).join(", "))},e=>{this.onError("error initializing MIDI: "+e)})}get currentGroup(){return this.status.currentGroup}get selectedIndicies(){return this.status.selectedIndicies}get selectedRange(){return this.status.selectedRange}getAudioContext(){return this.renderer.getAudioContext()}getSongData(){return this.renderer.getSongData()}loadNewSongData(){let e=(new AudioSourceStorage).generateDefaultSong();this.renderer.loadSongData(e)}async loadRecentSongData(){let e=(new AudioSourceStorage).getRecentSongList();e[0]&&e[0].guid&&await this.loadSongFromMemory(e[0].guid)}async saveSongToMemory(){const e=this.renderer.getSongData(),t=this.renderer.getSongHistory(),s=new AudioSourceStorage;await s.saveSongToMemory(e,t)}saveSongToFile(){const e=this.renderer.getSongData();(new AudioSourceStorage).saveSongToFile(e)}loadSongFromMemory(e){const t=new AudioSourceStorage,s=t.loadSongFromMemory(e),o=t.loadSongHistoryFromMemory(e);this.renderer.loadSongData(s,o),this.render(),console.info("Song loaded from memory: "+e,s)}async loadSongFromFileInput(e){this.loadSongFromMIDIFileInput(e)}async loadSongFromMIDIFileInput(e){const t=new AudioSourceStorage,s=await t.loadMIDIFile(e);this.renderer.loadSongFromMIDIData(s),this.render(),console.info("Song loaded from midi: "+e,s,this.renderer.songData)}async loadSongFromSrc(e){const t=await new Promise((t,s)=>{const o=new XMLHttpRequest;o.open("GET",e+"",!0),o.responseType="json",o.onload=(()=>{if(200!==o.status)return s("Song file not found: "+url);t(o.response)}),o.send()});this.renderer.loadSongData(t),console.info("Song loaded from src: "+e,this.renderer.songData),this.render()}onInput(e){if(!e.defaultPrevented){switch(this.renderer.getAudioContext(),e.type){case"mousedown":e.altKey||(clearTimeout(this.longPressTimeout),this.longPressTimeout=setTimeout(function(){e.target.dispatchEvent(new CustomEvent("longpress",{detail:{originalEvent:e},cancelable:!0,bubbles:!0}))},this.status.longPressTimeout));break;case"mouseup":clearTimeout(this.longPressTimeout)}this.menu.contains(e.target)&&this.menu.onInput(e),this.grid.contains(e.target)&&this.grid.onInput(e),this.forms.contains(e.target)&&this.forms.onInput(e)}}onSongEvent(e){switch(this.grid.onSongEvent(e),e.type){case"song:loaded":this.grid.renderDuration=this.renderer.getSongTimeDivision();break;case"song:start":this.classList.add("playing");break;case"song:end":case"song:pause":this.classList.remove("playing");break;case"song:modified":clearTimeout(this.saveSongToMemoryTimer),this.saveSongToMemoryTimer=setTimeout(e=>this.saveSongToMemory(e),this.status.autoSaveTimeout);break;case"instrument:loaded":console.info("TODO: load instrument instances",e.detail);break;case"instrument:library":case"instrument:instance":this.forms.render()}}onError(e){console.error(e),this.webSocket&&this.webSocket.onError(e)}render(){const e=this.getScriptDirectory("composer/audio-source-composer.css");this.shadowDOM.innerHTML=`\n        <link rel="stylesheet" href="${e}" />\n        <div class="asc-container">\n            <asc-menu tabindex="0"></asc-menu>\n            <asc-forms tabindex="0"></asc-forms>\n            <asc-tracker tabindex="0" group="root"></asc-tracker>\n        </div>\n        `}update(){this.menu.update(),this.forms.update(),this.grid.update()}selectGroup(e){this.status.groupHistory=this.status.groupHistory.filter(e=>e===this.status.currentGroup),this.status.groupHistory.unshift(this.status.currentGroup),this.status.currentGroup=e,console.log("Group Change: ",e,this.status.groupHistory),this.grid=new AudioSourceComposerTracker(this,e),this.render()}selectInstructions(e=null){if(this.status.selectedIndicies=[],"number"==typeof e)this.status.selectedIndicies=[e];else{if(!Array.isArray(e)){if("function"==typeof e){let t=[];return this.renderer.eachInstruction(this.status.currentGroup,(s,o,r)=>{e(s,o,r)&&t.push(s)}),void this.selectedIndicies(t)}throw console.error("Invalid indicies",e)}this.status.selectedIndicies=e}this.update()}playSelectedInstructions(){this.renderer.stopAllPlayback();const e=this.status.selectedIndicies;for(let t=0;t<e.length;t++)this.renderer.playInstructionAtIndex(this.status.currentGroup,e[t])}getScriptDirectory(e=""){return document.head.querySelector('script[src$="audio-source-composer-element.js"],script[src$="audio-source-composer.min.js"]').src.split("/").slice(0,-2).join("/")+"/"+e}loadCSS(){const e=this.shadowDOM||document.head;if(e.querySelector('link[href$="audio-source-composer.css"]'))return;const t=this.getScriptDirectory("composer/audio-source-composer.css");let s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("type","text/css"),s.setAttribute("href",t),e.appendChild(s)}}customElements.define("audio-source-composer",AudioSourceComposerElement);class AudioSourceComposerForms extends HTMLElement{constructor(){super()}connectedCallback(){this.editor=this.getRootNode().host,this.render()}onInput(e,t){if(!e.defaultPrevented&&(t||!(e.target instanceof Node)||this.contains(e.target)))switch(e.type){case"submit":e.preventDefault(),this.onSubmit(e,t);break;case"change":case"blur":e.target.form&&e.target.form.classList.contains("submit-on-"+e.type)&&this.onSubmit(e,t)}}onSubmit(e,t){t||(t=e.target.form||e.target);const n=t.getAttribute("data-action");this.editor.currentGroup,this.editor.grid.selectedIndicies,this.editor.selectedRange;switch(n){case"instrument:add":this.editor.status.currentInstrumentID=this.editor.renderer.addInstrument(t.elements.instrumentURL.value);break;case"load:file":this.editor.loadSongFromFileInput(t.file);break;case"song:edit":this.editor.renderer.replaceDataPath("beatsPerMinute",t["beats-per-minute"].value),this.editor.renderer.replaceDataPath("beatsPerMeasure",t["beats-per-measure"].value);break;case"song:play":this.editor.renderer.isPlaybackActive()?this.editor.renderer.stopAllPlayback():this.editor.renderer.play();break;case"song:pause":this.editor.renderer.stopAllPlayback();break;case"song:resume":this.editor.renderer.play(this.editor.renderer.seekPosition);break;case"song:playback":console.log(e.target);break;case"song:volume":this.editor.renderer.setVolume(parseInt(t.volume.value));break;case"song:add-instrument":const s=t.instrumentURL.value;t.instrumentURL.value="",confirm(`Add Instrument to Song?\nURL: ${s}`)?(this.editor.renderer.addInstrument(s),this.render()):console.info("Add instrument canceled");break;case"song:set-title":this.editor.renderer.setSongTitle(t.title.value);break;case"song:set-version":this.editor.renderer.setSongVersion(t.version.value);break;case"toggle:control-song":this.classList.toggle("hide-control-song");break;case"toggle:control-tracker":case"toggle:control-tracker":this.classList.toggle("hide-control-tracker");break;default:console.warn("Unhandled "+e.type+": ",n)}}render(){const e=this.editor.renderer,t=this.editor.getSongData();this.innerHTML=`\n            <div class="form-section-container">\n                <div class="form-section-divide">\n                    <form action="#" class="form-song-toggle" data-action="toggle:control-song">\n                        <button name="toggle" class="themed" title="Show/Hide Song Controls">\n                            <div>Song</div>\n                        </button>\n                    </form>\n                </div>               \n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Playback Controls</div>\n                    <form action="#" class="form-song-play" data-action="song:play">\n                        <button type="submit" name="play" class="themed">Play</button>\n                    </form>\n                    <form action="#" class="form-song-pause show-on-song-playing" data-action="song:pause">\n                        <button type="submit" name="pause" class="themed">Pause</button>\n                    </form>\n                    <form action="#" class="form-song-resume show-on-song-paused" data-action="song:resume">\n                        <button type="submit" name="resume" class="themed">Resume</button>\n                    </form>\n                </div>\n                                             \n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Volume</div>\n                    <form action="#" class="form-song-volume submit-on-change" data-action="song:volume">\n                        <div class="volume-container">\n                            <input name="volume" type="range" min="1" max="100" value="${e?e.getVolume():0}" class="themed">\n                        </div>\n                    </form>\n                </div>\n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Load</div>\n                    <form name="form-load-file" action="#" class="form-load-file submit-on-change" data-action="load:file">\n                        <label>\n                            <div class="input-style">File</div>\n                            <input type="file" name="file" accept=".json,.mid,.midi" style="display: none" />\n                        </label>\n                    </form>\n                </div>\n                              \n                                             \n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Song Title</div>\n                    <form action="#" class="form-song-title submit-on-change" data-action="song:set-title">\n                        <input name="title" type="text" class="themed" value="${t.title}" />\n                    </form>\n                </div>     \n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Version</div>\n                    <form action="#" class="form-song-version submit-on-change" data-action="song:set-version">\n                        <input name="version" type="text" class="themed" value="${t.version}" />\n                    </form>\n                </div>                \n                 \n                \n                <div class="form-section control-song">\n                    <div class="form-section-header">Add Instrument</div>                    \n                    <form class="form-add-instrument submit-on-change" data-action="instrument:add">\n                        <select name="instrumentURL" class="themed">\n                            <option value="">Select Instrument</option>\n                            ${this.renderEditorFormOptions("instruments-available")}\n                        </select>\n                    </form>\n                </div>\n                 \n                <div style="clear: both;" class="control-song"></div>\n                 \n            </div> \n        `,this.update()}update(){}renderEditorFormOptions(e,t){let n="";return this.editor.values.getValues(e,function(e,s,o=""){const r=!!t&&t(e);n+=`<option value="${e}" ${r?' selected="selected"':""}${o}>${s}</option>`}),n}}customElements.define("asc-forms",AudioSourceComposerForms);class AudioSourceComposerTracker extends HTMLElement{constructor(){super(),this.renderTimeout=null,this.minimumGridLengthTicks=null}get fieldRenderTimeDivision(){return this.querySelector("form.form-render-time-division select[name=timeDivision]")}get fieldRenderInstrument(){return this.querySelector("form.form-render-instrument select[name=instrument]")}get fieldRenderOctave(){return this.querySelector("form.form-render-octave select[name=octave]")}get fieldInstructionInstrument(){return this.querySelector("form.form-instruction-instrument select[name=instrument]")}get fieldInstructionDuration(){return this.querySelector("form.form-instruction-duration select[name=duration]")}get fieldInstructionCommand(){return this.querySelector("form.form-note-command select[name=command]")}get fieldInstructionVelocity(){return this.querySelector("form.form-instruction-velocity input[name=velocity]")}get fieldInstructionInsert(){return this.querySelector("form.form-instruction-insert button[name=insert]")}get fieldInstructionDelete(){return this.querySelector("form.form-instruction-delete button[name=delete]")}get fieldSelectedIndicies(){return this.querySelector("form.form-selected-indicies input[name=indicies]")}get scrollContainer(){return this.querySelector(".tracker-scroll-container")}get groupName(){return this.getAttribute("group")}set groupName(e){this.setAttribute("group",e),this.render(1)}get timeDivision(){return parseInt(this.getAttribute("timeDivision"))}set timeDivision(e){this.setAttribute("timeDivision",e),this.render(1)}get status(){return this.editor.status.grid}get editorForms(){return this.editor.forms}get selectedCells(){return this.querySelectorAll("asct-instruction.selected")}get cursorCell(){return this.querySelector("asct-instruction.cursor,asct-instruction-add.cursor")}get cursorRow(){return this.cursorCell.parentNode}get cursorPosition(){return this.cursorCell.parentNode.position}get cursorInstruction(){return this.getInstruction(this.cursorCell.index)}get selectedIndicies(){return[].map.call(this.selectedCells,e=>e.index)}connectedCallback(){this.addEventListener("scroll",this.onInput,!0),this.editor=this.getRootNode().host,this.getAttribute("timeDivision")||this.setAttribute("timeDivision",this.editor.renderer.getSongTimeDivision()),setTimeout(e=>this.render(),20),setTimeout(e=>this.renderAllRows(),1e3)}playSelectedInstructions(){this.editor.renderer.stopAllPlayback();const e=this.selectedIndicies;for(let t=0;t<e.length;t++)this.editor.renderer.playInstructionAtIndex(this.groupName,e[t])}getInstructions(e=null){return this.editor.renderer.getInstructions(this.groupName,e)}getInstructionRange(e,t=null){return this.editor.renderer.getInstructionRange(this.groupName,e,t)}getInstruction(e){return this.editor.renderer.getInstruction(this.groupName,e)}getInstructionFormValues(e,t=null){if(t||(t=this.fieldInstructionCommand.value),e&&!t)return!1;let r=new SongInstruction;(this.fieldInstructionInstrument.value||0===this.fieldInstructionInstrument.value)&&(r.instrument=parseInt(this.fieldInstructionInstrument.value)),this.fieldInstructionDuration.value&&(r.duration=parseFloat(this.fieldInstructionDuration.value));const n=parseInt(this.fieldInstructionVelocity.value);return n&&100!==n&&(r.velocity=n),t=this.replaceFrequencyAlias(t,r.instrument),r.command=t,r}render(e=0){console.time("grid.render()"),this.innerHTML=`\n            <div class="form-section-container">\n            ${this.getFormHTML()}\n            </div>\n            <div class="tracker-scroll-container">\n            </div>\n        `,this.renderAllRows(e),this.update(),console.timeEnd("grid.render()")}renderAllRows(e=0){const t=()=>{const e=this.scrollContainer.querySelectorAll("asct-row");let t=0;const r=this.scrollContainer?this.scrollContainer.scrollTop:0,n=()=>{let r=e[t];return r||(r=document.createElement("asct-row"),this.scrollContainer.appendChild(r)),t++,r},i=this.timeDivision;let s=0;let o=[],c=0;this.editor.renderer.eachInstruction(this.groupName,(e,t,r)=>{0!==t.deltaDuration&&(((e,t,r,o)=>{let c=r-t,l=n();for(l.render(e,c,o),l.classList.remove("break");s<r;)s!==c&&(l=n()).render(e,s),s+=i,l.classList.add("break")})(c,t.deltaDuration,r.groupPositionInTicks,o),c=e,o=[]),o.push(t)}),this.scrollContainer.scrollTop=r};e>0?(clearTimeout(this.renderTimeout),this.renderTimeout=setTimeout(e=>{t()},e)):t()}onInput(e){if(e.defaultPrevented)return;if(e.target instanceof Node&&!this.contains(e.target))return;let t=this.selectedIndicies;switch(e.type){case"midimessage":switch(e.data[0]){case 144:e.preventDefault();let r=this.editor.renderer.getCommandFromMIDINote(e.data[1]),n=Math.round(e.data[2]/128*100);if(console.log("MIDI ",r,n),this.cursorCell.matches(".new")){let i=this.getInstructionFormValues(!0);r=this.replaceFrequencyAlias(r,i.instrument),i.command=r,i.velocity=n;const s=this.cursorPosition,o=this.insertInstructionAtPosition(s,i);this.renderAllRows(),this.selectIndicies(e,o),t=[o]}else for(let e=0;e<t.length;e++){const i=this.getInstruction(t[e]),s=this.replaceFrequencyAlias(r,i.instrument);this.replaceInstructionCommand(t[e],s),this.replaceInstructionVelocity(t[e],n)}this.playSelectedInstructions(e)}break;case"keydown":let r=e.key;switch(!e.ctrlKey&&this.editor.keyboard.getKeyboardCommand(e.key)&&(r="PlayFrequency"),"Enter"===r&&e.altKey&&(r="ContextMenu"),r){case"Delete":e.preventDefault();for(let e=0;e<t.length;e++)this.editor.renderer.deleteInstructionAtIndex(this.groupName,t[e]);this.renderAllRows(),this.selectIndicies(e,t[0]);break;case"Escape":case"Backspace":e.preventDefault(),this.navigatePop(),this.selectIndicies(e,0);break;case"Enter":if(e.preventDefault(),this.cursorCell.matches(".new")){let t=this.getInstructionFormValues(!0);if(!t)return console.info("Insert canceled");let r=this.insertInstructionAtPosition(this.cursorPosition,t);this.renderAllRows(),this.selectIndicies(e,r)}let n=this.cursorInstruction;if(n.isGroupCommand()){const e=n.command.substr(1);this.editor.selectGroup(e)}else this.playSelectedInstructions(e);break;case"Play":e.preventDefault(),this.playSelectedInstructions(e);break;case"ArrowRight":e.preventDefault(),this.selectNextCell(e),this.playSelectedInstructions(e);break;case"ArrowLeft":e.preventDefault(),this.selectPreviousCell(e),this.playSelectedInstructions(e);break;case"ArrowDown":e.preventDefault(),this.selectNextRowCell(e),this.playSelectedInstructions(e);break;case"ArrowUp":e.preventDefault(),this.selectPreviousRowCell(e),this.playSelectedInstructions(e);break;case" ":e.preventDefault(),this.editor.renderer.isPlaybackActive()?this.editor.renderer.stopAllPlayback():this.editor.renderer.playInstructions(this.groupName);break;case"PlayFrequency":let i=this.editor.keyboard.getKeyboardCommand(e.key);if(null===i)break;if(e.preventDefault(),this.cursorCell.matches("asct-instruction-add")){let r=this.getInstructionFormValues(!0,i);if(!r)return this.fieldInstructionCommand.focus(),console.info("Insert canceled");const n=this.cursorPosition,s=this.insertInstructionAtPosition(n,r);this.renderAllRows(),this.selectIndicies(e,s),t=[s]}else for(let e=0;e<t.length;e++){const r=this.getInstruction(t[e]),n=this.replaceFrequencyAlias(i,r.instrument);this.replaceInstructionCommand(t[e],n)}this.playSelectedInstructions(e)}break;case"mousedown":if(this.editor.menu.closeMenu(),e.target.matches("asct-instruction"))return this.onCellInput(e);if(e.target.matches("asct-instruction > *"))return this.onParamInput(e);if(e.target.matches("asct-row"))return this.onRowInput(e);break;case"mouseup":break;case"longpress":e.preventDefault(),this.scrollContainer.contains(e.target)&&this.editor.menu.openContextMenu(e);break;case"contextmenu":this.scrollContainer.contains(e.target)&&(e.altKey||(e.preventDefault(),this.editor.menu.openContextMenu(e)));break;case"scroll":this.renderAllRows(50);break;case"submit":e.preventDefault(),this.onSubmit(e);break;case"change":case"blur":e.target.form&&e.target.form.classList.contains("submit-on-"+e.type)&&this.onSubmit(e);break;default:throw new Error("Unhandled type: "+e.type)}}getFormHTML(){return`\n\n             \n            <div class="form-section-divide">\n                <form action="#" class="form-note-toggle" data-action="toggle:control-tracker">\n                    <button name="toggle" class="themed" title="Show/Hide Tracker Controls">\n                        <div>Tracker</div>\n                    </button>\n                </form>\n            </div>\n \n            <div class="form-section control-tracker">\n                <div class="form-section-header">Instruction</div>\n                <form action="#" class="form-note-command submit-on-change" data-action="instruction:command">\n                    <select name="command" title="Instruction Command" class="themed" required="required">\n                        <option value="">Command (Choose)</option>\n                        <optgroup label="Custom Frequencies" class="instrument-frequencies">\n                            ${this.editor.values.renderEditorFormOptions("command-instrument-frequencies")}\n                        </optgroup>\n                        <optgroup label="Frequencies">\n                            ${this.editor.values.renderEditorFormOptions("note-frequencies-all")}\n                        </optgroup>\n                        <optgroup label="Group Execute">\n                            ${this.editor.values.renderEditorFormOptions("command-group-execute")}\n                        </optgroup>\n                    </select>\n                </form>\n                <form action="#" class="form-instruction-insert" data-action="instruction:insert">\n                    <button name="insert" class="themed" title="Insert Instruction">+</button>\n                </form>\n                <form action="#" class="form-instruction-delete submit-on-change" data-action="instruction:delete">\n                    <button name="delete" class="themed" title="Delete Instruction" disabled>X</button>\n                </form>\n            </div>\n            \n            <form action="#" class="form-instruction-instrument submit-on-change" data-action="instruction:instrument">\n            <div class="form-section-header">Instrument</div>\n                <select name="instrument" title="Instruction Instrument" class="themed">\n                    <option value="">None</option>\n                    <optgroup label="Song Instruments">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-instruction-velocity submit-on-change" data-action="instruction:velocity">\n            <div class="form-section-header">Velocity</div>\n                <input type="range" name="velocity" min="1" max="100" class="themed" />\n            </form>\n            \n            \n            <form action="#" class="form-instruction-duration submit-on-change" data-action="instruction:duration">\n                <div class="form-section-header">Duration</div>\n                <select name="duration" title="Instruction Duration" class="themed">\n                    <option value="">No Duration</option>\n                    <optgroup label="Note Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n             \n            \n                \n            <form action="#" class="form-render-octave submit-on-change" data-action="status:octave">\n                <div class="form-section-header">Octave</div>\n                <select name="octave" class="themed">\n                    <optgroup label="Select Octave">\n                        ${this.editor.values.renderEditorFormOptions("note-frequency-octaves")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <div class="form-section control-tracker">\n                <div class="form-section-header">Render Group</div>\n                ${this.editor.values.getValues("groups",(e,t)=>'<form action="#" class="form-group" data-action="group:edit">'+`<button name="groupName" value="${e}" class="themed" >${t}</button>`+"</form>")}\n                \n                <form action="#" class="form-group" data-action="group:edit">\n                    <button name="groupName" value=":new" class="new themed" title="Create new group">+</button>\n                </form>\n                \n            </div>\n            \n            <form action="#" class="form-render-time-division submit-on-change" data-action="tracker:duration">\n                <div class="form-section-header">Quantize</div>\n                <select name="timeDivision" title="Render Duration" class="themed">\n                    <option value="">No Duration</option>\n                    <optgroup label="Render Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-render-instrument submit-on-change" data-action="tracker:instrument">\n                <div class="form-section-header">Filter By Instrument</div>                    \n                <select name="instrument" class="themed"->\n                    <option value="">Show All (Default)</option>\n                    <optgroup label="Filter By">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form class="form-selected-indicies submit-on-change" data-action="tracker:selected">\n                <div class="form-section-header">Indicies</div>                    \n                <input name="indicies" placeholder="No indicies selection" />\n            </form>\n        `}onSubmit(e,t){if(t||(t=e.target.form||e.target),!t.matches("form"))throw new Error("Invalid Form: "+t);const r=t.getAttribute("data-action"),n=this.groupName,i=this.selectedIndicies;switch(r){case"instruction:insert":let s=this.getInstructionFormValues(!0);if(!s)return this.fieldInstructionCommand.focus(),console.info("Insert canceled");const o=this.cursorPosition,c=this.editor.renderer.insertInstructionAtPosition(n,o,s);this.renderAllRows(),this.selectIndicies(e,c),this.editor.renderer.playInstruction(s);break;case"instruction:command":if(""===t.command.value)return void t.command.focus();const l=t.command.value;let a=null;t.elements.command.selectedOptions[0]&&t.elements.command.selectedOptions[0].hasAttribute("data-instrument")&&(a=parseInt(t.elements.command.selectedOptions[0].getAttribute("data-instrument")));for(let e=0;e<i.length;e++)this.editor.renderer.replaceInstructionCommand(n,i[e],l),null!==a&&this.editor.renderer.replaceInstructionInstrument(n,i[e],a),this.findInstructionElement(i[e]).render();this.playSelectedInstructions(),this.fieldInstructionCommand.focus();break;case"instruction:instrument":let u=""===t.instrument.value?null:parseInt(t.instrument.value);for(let e=0;e<i.length;e++)this.editor.renderer.replaceInstructionInstrument(n,i[e],u),this.findInstructionElement(i[e]).render();this.editor.status.currentInstrumentID=u,this.playSelectedInstructions(),this.fieldInstructionInstrument.focus();break;case"instruction:duration":const d=parseFloat(t.duration.value)||null;for(let e=0;e<i.length;e++)this.editor.renderer.replaceInstructionDuration(n,i[e],d),this.findInstructionElement(i[e]).render();this.playSelectedInstructions(),this.fieldInstructionDuration.focus();break;case"instruction:velocity":const m="0"===t.velocity.value?0:parseInt(t.velocity.value)||null;for(let e=0;e<i.length;e++)this.editor.renderer.replaceInstructionVelocity(n,i[e],m),this.findInstructionElement(i[e]).render();this.playSelectedInstructions(),this.fieldInstructionVelocity.focus();break;case"instruction:delete":for(let e=0;e<i.length;e++)this.editor.renderer.deleteInstructionAtIndex(n,i[e]);this.renderAllRows(),this.selectIndicies(e,i[0]);break;case"group:edit":if(":new"===t.groupName.value){let e=this.editor.renderer.generateInstructionGroupName(n);(e=prompt("Create new instruction group?",e))?this.editor.renderer.addInstructionGroup(e,[]):console.error("Create instruction group canceled"),this.editor.render()}else this.editor.selectGroup(t.groupName.value);break;case"tracker:octave":this.editor.status.currentOctave=parseInt(this.fieldRenderOctave.value);break;case"tracker:duration":this.timeDivision=this.fieldRenderTimeDivision.value;break;case"tracker:instrument":this.render();break;default:console.warn("Unhandled "+e.type+": ",r)}}createNewInstructionCell(e){this.querySelectorAll("asct-instruction-add").forEach(e=>e.parentNode.removeChild(e));const t=document.createElement("asct-instruction-add");t.position=e.position,t.innerHTML="+";const r=e.querySelector("asct-delta");return e.insertBefore(t,r),t}onRowInput(e){e.preventDefault(),e.target.select(),this.update(),this.focus(),this.playSelectedInstructions(e)}onCellInput(e){e.preventDefault();let t=e.target;this.selectCell(e,t),t.play()}onParamInput(e){e.preventDefault();let t=e.target.instruction;this.selectCell(e,t),t.play()}onSongEvent(e){const t=e.detail||{stats:{}};let r,n;switch(e.type){case"note:play":r=this.findRowElement(t.stats.groupPositionInTicks),n=this.findInstructionElement(t.stats.currentIndex);const i=t.currentTime;setTimeout(()=>{n&&n.classList.add("playing"),r&&(r.classList.add("playing"),r.scrollTo())},1e3*(t.startTime-i)),t.duration&&setTimeout(()=>{n&&n.classList.remove("playing"),r&&r.classList.remove("playing")},1e3*(t.startTime-i+t.duration))}}selectNextCell(e){const t=this.cursorCell||this.querySelector("asct-instruction");if(t.nextElementSibling&&t.nextElementSibling.matches("asct-instruction,asct-instruction-add"))return this.selectCell(e,t.nextElementSibling);if("asct-instruction-add"===t.nodeName.toLowerCase()){const r=t.parentNode.nextElementSibling;return void this.selectCell(e,r.firstElementChild)}const r=this.cursorCell.parentNode;this.selectCell(e,this.createNewInstructionCell(r))}selectNextRowCell(e,t=null,r=!0){const n=this.cursorCell||this.querySelector("asct-instruction"),i=n.parentNode;if(null===t&&(t=[].indexOf.call(n.parentNode.children,n)),!i.nextElementSibling){if(!r)throw new Error("New row was not created");return this.increaseTrackerSize(e)}const s=i.nextElementSibling;if(s.children[t]&&s.children[t].matches("asct-instruction,asct-instruction-add"))return this.selectCell(e,s.children[t]);this.selectCell(e,this.createNewInstructionCell(s))}selectPreviousCell(e){const t=this.cursorCell||this.querySelector("asct-instruction");if(t.previousElementSibling&&t.previousElementSibling.matches("asct-instruction"))return this.selectCell(e,t.previousElementSibling);this.selectPreviousRowCell(e,-1)}selectPreviousRowCell(e,t=null){const r=this.cursorCell||this.querySelector("asct-instruction"),n=r.parentNode;t=null===t?[].indexOf.call(n.children,r):t;let i=n.previousElementSibling;if(i||(i=n.parentNode.lastElementChild),i.children[t]&&i.children[t].matches("asct-instruction"))return this.selectCell(e,i.children[t]);this.selectCell(e,this.createNewInstructionCell(i))}selectCell(e,t,r=!0,n=null){e.shiftKey&&(r=!1),t.select(r,n),this.update(),this.focus(),t.parentNode.scrollTo()}selectIndicies(e,t){Array.isArray(t)||(t=[t]);for(let r=0;r<t.length;r++){const n=this.findInstructionElement(t[r]);if(!n)throw new Error("Instruction not found: "+t[r]);this.selectCell(e,n,0===r)}}navigatePop(){console.log("Navigate Back: ",this.status.trackers[0].groupName),this.status.trackers.length>0&&this.status.trackers.shift(),this.render()}increaseTrackerSize(e,t=!0){if(this.editor.renderer.eachInstruction(this.groupName,(e,t,r)=>{this.minimumTrackerLengthTicks<r.groupPositionInTicks&&(this.minimumTrackerLengthTicks=r.groupPositionInTicks)}),this.minimumTrackerLengthTicks+=this.timeDivision,this.render(),t){const t=this.querySelector(".composer-tracker > div:last-child");this.selectCell(e,this.createNewInstructionCell(t))}}insertInstructionAtIndex(e,t){return this.editor.renderer.insertInstructionAtIndex(this.groupName,t,e)}insertInstructionAtPosition(e,t){return this.editor.renderer.insertInstructionAtPosition(this.groupName,e,t)}deleteInstructionAtIndex(e){return this.editor.renderer.deleteInstructionAtIndex(this.groupName,e,1)}replaceInstructionCommand(e,t){return this.editor.renderer.replaceInstructionCommand(this.groupName,e,t)}replaceInstructionVelocity(e,t){return this.editor.renderer.replaceInstructionVelocity(this.groupName,e,t)}replaceFrequencyAlias(e,t){const r=this.editor.renderer.getInstrument(t,!1);if(!r||!r.getFrequencyAliases)return e;const n=r.getFrequencyAliases(e);return void 0===n[e]?e:n[e]}scrollToCursor(e){this.scrollTop<e.parentNode.offsetTop-this.offsetHeight&&(this.scrollTop=e.parentNode.offsetTop),this.scrollTop>e.parentNode.offsetTop&&(this.scrollTop=e.parentNode.offsetTop-this.offsetHeight)}findInstructionElement(e){return this.querySelector(`asct-instruction[i='${e}']`)}findRowElement(e){return this.querySelector(`asct-row[p='${e}']`)}getInstructionHTML(e,t){return`<div class="instruction" data-index="${e}">\n                    <div class="command">${t.command}</div>\n                    ${null!==t.instrument?`<div class="instrument">${this.editor.values.format(t.instrument,"instrument")}</div>`:""}\n                    ${null!==t.velocity?`<div class="velocity">${this.editor.values.format(t.velocity,"velocity")}</div>`:""}\n                    ${null!==t.duration?`<div class="duration">${this.editor.values.format(t.duration,"duration")}</div>`:""}\n                </div>`}getRowHTML(e,t,r,n){const i=[];let s=n;for(let e=0;e<r.length;e++)i.push(this.getInstructionHTML(s++,r[e]));return`<div data-position="${e}">\n                   ${i.join("")}\n                   <div class="delta">${this.editor.values.format(t,"duration")}</div>\n                </div>`}update(){let e=this.selectedIndicies,t=this.timeDivision||this.editor.renderer.getSongTimeDivision();let r=this.editor.renderer.getInstructions(this.groupName,e)[0];const n=this.editor.container;n.classList.remove("show-control-tracker-insert"),n.classList.remove("show-control-tracker-modify"),e.length>0?this.fieldInstructionDelete.removeAttribute("disabled"):this.fieldInstructionDelete.setAttribute("disabled","disabled"),r?(this.fieldInstructionCommand.value=r.command,this.fieldInstructionInstrument.value=null!==r.instrument?r.instrument:"",this.fieldInstructionVelocity.value=null!==r.velocity?r.velocity:"",this.fieldInstructionDuration.value=null!==r.duration?r.duration:"",n.classList.add("show-control-tracker-modify")):0===e.length&&n.classList.add("show-control-tracker-insert"),this.fieldInstructionCommand.querySelectorAll(".instrument-frequencies option").forEach(e=>e.classList.toggle("hidden",this.fieldInstructionInstrument.value!==e.getAttribute("data-instrument"))),this.fieldInstructionCommand.querySelectorAll(".instrument-frequencies option").forEach(e=>e.classList.toggle("hidden",this.fieldInstructionInstrument.value!==e.getAttribute("data-instrument"))),this.querySelectorAll(".multiple-count-text").forEach(t=>t.innerHTML=e.length>1?"(s)":""),this.fieldRenderOctave.value=this.editor.status.currentOctave,!this.fieldRenderTimeDivision.value&&t&&(this.fieldRenderTimeDivision.value=t),!this.fieldInstructionDuration.value&&this.fieldRenderTimeDivision.value&&(this.fieldInstructionDuration.value=this.fieldRenderTimeDivision.value),this.fieldSelectedIndicies.value=e.join(",")}}customElements.define("asc-tracker",AudioSourceComposerTracker);class AudioSourceComposerTrackerRow extends HTMLElement{constructor(){super()}get tracker(){return this.closest("asc-tracker")}set position(e){this.setAttribute("p",e)}get position(){return parseInt(this.getAttribute("p"))}get duration(){return this.nextElementSibling?this.nextElementSibling.position-this.position:"N/A"}get visible(){const e=this.parentNode.scrollTop+this.parentNode.offsetHeight,t=this.offsetTop+this.offsetHeight;return!(this.offsetTop-e>0)&&!(t<this.parentNode.scrollTop)}updateAddButton(){let e=this.querySelector("asct-instruction-add");if(!e){this.parentNode.querySelectorAll("asct-instruction-add").forEach(e=>e.parentNode.removeChild(e));const t=document.createElement("asct-instruction-add");e=t,t.position=this.position,t.innerHTML="+";const r=this.querySelector("asct-delta");this.insertBefore(t,r)}return e}select(e=!0,t=null){e&&(this.parentNode.querySelectorAll("asct-row.selected").forEach(e=>e.classList.remove("selected")),this.parentNode.querySelectorAll("asct-instruction.selected,asct-instruction-add.selected").forEach(e=>e.classList.remove("selected")),this.parentNode.querySelectorAll("asct-instruction.cursor,asct-instruction-add.cursor").forEach(e=>e.classList.remove("cursor"))),this.classList[t?"toggle":"add"]("selected"),this.updateAddButton().classList.add("cursor")}scrollTo(){const e=this.tracker.scrollContainer;e.scrollTop<this.offsetTop-e.offsetHeight&&(e.scrollTop=this.offsetTop),e.scrollTop>this.offsetTop&&(e.scrollTop=this.offsetTop-e.offsetHeight)}connectedCallback(){}render(e,t,r=[]){if(this.position=t,this.visible){this.innerHTML="";for(let t=0;t<r.length;t++){const n=document.createElement("asct-instruction");n.index=e+t,this.appendChild(n),n.render(r[t])}const t=document.createElement("asct-delta");this.appendChild(t),setTimeout(e=>t.render(this.duration),1)}else this.innerHTML="";return this}}customElements.define("asct-row",AudioSourceComposerTrackerRow);class AudioSourceComposerTrackerInstruction extends HTMLElement{constructor(){super()}get row(){return this.parentNode}get tracker(){return this.parentNode.tracker}get editor(){return this.tracker.editor}set index(e){this.setAttribute("i",e)}get index(){return parseInt(this.getAttribute("i"))}get selected(){return this.classList.contains("selected")}getInstruction(){return this.row.tracker.getInstruction(this.index)}play(){this.editor.renderer.playInstructionAtIndex(this.tracker.groupName,this.index)}connectedCallback(){}select(e=!0,t=null){e&&this.tracker.querySelectorAll("asct-instruction.selected").forEach(e=>e.classList.remove("selected")),this.classList[t?"toggle":"add"]("selected"),this.tracker.querySelectorAll("asct-row").forEach(e=>e.classList.toggle("selected",e.querySelectorAll("asct-instruction.selected").length>0)),this.row.updateAddButton(!1),this.tracker.querySelectorAll("asct-instruction.cursor,asct-instruction-add.cursor").forEach(e=>e.classList.remove("cursor")),this.classList.add("cursor")}render(e=null){let t;this.innerHTML="",e=e||this.getInstruction(),this.appendChild(t=document.createElement("ascti-command")),t.render(e),this.appendChild(t=document.createElement("ascti-instrument")),t.render(e),this.appendChild(t=document.createElement("ascti-velocity")),t.render(e),this.appendChild(t=document.createElement("ascti-duration")),t.render(e)}}customElements.define("asct-instruction",AudioSourceComposerTrackerInstruction);class AudioSourceComposerTrackerInstructionAdd extends AudioSourceComposerTrackerInstruction{}customElements.define("asct-instruction-add",AudioSourceComposerTrackerInstructionAdd);class AudioSourceComposerTrackerParameter extends HTMLElement{constructor(){super()}get instruction(){return this.parentNode}get tracker(){return this.parentNode.parentNode.tracker}get editor(){return this.tracker.editor}connectedCallback(){}render(){this.innerHTML=this.editor.values.format(this.row.duration,"duration")}}class AudioSourceComposerParamCommand extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.command,"command")}}customElements.define("ascti-command",AudioSourceComposerParamCommand);class AudioSourceComposerParamInstrument extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.instrument,"instrument")}}customElements.define("ascti-instrument",AudioSourceComposerParamInstrument);class AudioSourceComposerParamVelocity extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.velocity,"velocity")}}customElements.define("ascti-velocity",AudioSourceComposerParamVelocity);class AudioSourceComposerTrackerDuration extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.duration,"duration")}}customElements.define("ascti-duration",AudioSourceComposerTrackerDuration);class AudioSourceComposerTrackerDelta extends HTMLElement{constructor(){super()}get editor(){return this.tracker.editor}get tracker(){return this.parentNode.tracker}get row(){return this.parentNode}connectedCallback(){}render(e){e=e||this.row?this.row.duration:-1,this.innerHTML=this.editor.values.format(e,"duration")}}customElements.define("asct-delta",AudioSourceComposerTrackerDelta);class AudioSourceComposerInstruments extends HTMLElement{constructor(e){super()}connectedCallback(){this.editor=this.getRootNode().host,this.render()}async loadInstrumentLibrary(e,t=!1){if(!e)throw new Error("Invalid url");return e=new URL(e,document.location)+"",!t&&this.editor.instrumentLibrary&&this.editor.instrumentLibrary.url===e?this.editor.instrumentLibrary:new Promise((t,n)=>{const r=new XMLHttpRequest;r.open("GET",e+"",!0),r.responseType="json",r.onload=(()=>{if(200!==r.status)return n("Sample library not found: "+e);this.editor.instrumentLibrary=r.response,this.editor.instrumentLibrary.url=URL+"",this.renderElement.dispatchEvent(new CustomEvent("instrument:library",{detail:this.editor.instrumentLibrary,bubbles:!0})),t(this.editor.instrumentLibrary)}),r.send()})}onInput(e){if(!(e.target instanceof Node)||this.renderElement.contains(e.target))switch(e.type){case"submit":this.onSubmit(e);break;case"change":case"blur":e.target.form&&e.target.form.classList.contains("submit-on-"+e.type)&&this.onSubmit(e)}}onSubmit(e){e.preventDefault();let t=e.target.form||e.target;switch(t.getAttribute("data-action")){case"instrument:name":this.editor.renderer.replaceInstrumentParam(t.elements.instrumentID.value,"name",t.elements.name.value);break;case"instrument:remove":this.editor.renderer.removeInstrument(t.elements.instrumentID.value),this.editor.instruments.render();break;case"instrument:change":this.editor.renderer.replaceInstrument(t.elements.instrumentID.value,t.elements.instrumentURL.value),this.editor.renderer.loadInstrument(t.elements.instrumentID.value,!0),this.editor.instruments.render();break;case"toggle:control-instrument":this.renderElement.classList.toggle("hide-control-instrument")}}update(){}render(){this.renderElement.innerHTML='\n            <div style="clear: both;" class="control-instrument"></div>\n            <div class="form-section-divide">\n                <form action="#" class="form-control-tracker-toggle" data-action="toggle:control-instrument">\n                    <button name="toggle" class="themed" title="Show/Hide Note Controls">\n                        <div>Instruments</div>\n                    </button>\n                </form>\n            </div>\n        ';const e=this.editor.renderer.getInstrumentList();for(let t=0;t<e.length;t++){let e=document.createElement("div");e.setAttribute("data-id",t+""),e.classList.add("instrument-container"),e.classList.add("control-instrument"),this.renderElement.appendChild(e);const n=this.editor.renderer.getInstrument(t,!1),r=this.editor.renderer.getInstrumentConfig(t,!1)||{name:"Empty Instrument"};if(e.innerHTML="",r.url)if(this.editor.renderer.isInstrumentLoaded(t))try{if(n instanceof HTMLElement)n.setAttribute("data-id",t+""),e.appendChild(n);else{if(!n.render)throw new Error("No Renderer");{const r=n.render(this,t);r&&(e.innerHTML=r)}}}catch(t){e.innerHTML=t}else e.innerHTML="Loading...";else e.innerHTML="Invalid URL"}}}class AudioSourceComposerKeyboard{constructor(e){this.editor=e}get keyboardLayout(){return{2:"C#2",3:"D#2",5:"F#2",6:"G#2",7:"A#2",9:"C#3",0:"D#3",q:"C2",w:"D2",e:"E2",r:"F2",t:"G2",y:"A2",u:"B2",i:"C3",o:"D3",p:"E3",s:"C#1",d:"D#1",g:"F#1",h:"G#1",j:"A#1",l:"C#2",";":"D#2",z:"C1",x:"D1",c:"E1",v:"F1",b:"G1",n:"A1",m:"B1",",":"C2",".":"D2","/":"E2"}}getKeyboardCommand(e){const r=this.keyboardLayout;if(void 0===r[e])return null;const t=parseInt(this.editor.grid.fieldRenderOctave.value)||1;let o=r[e];return o=(o=o.replace("2",t+1)).replace("1",t)}}class AudioSourceComposerMenu extends HTMLElement{constructor(){super()}get editorForms(){return this.editor.forms}connectedCallback(){this.editor=this.getRootNode().host,this.render()}onInput(n){if(!n.defaultPrevented&&(!(n.target instanceof Node)||this.contains(n.target)))switch(n.type){case"change":case"blur":n.target.form&&n.target.form.classList.contains("submit-on-"+n.type)&&this.editorForms.onSubmit(n,n.target.form);break;case"mousedown":this.onMenu(n),this.closeMenu()}}onMenu(n){let e,t,s,a,i;const r=this.editor.grid.groupName,o=this.editor.grid.selectedRange,l=this.editor.grid.selectedIndicies;let u=n.target;if(!u)return;const c=u.getAttribute("data-action")||u.parentNode.getAttribute("data-action");if(!c)return console.info("Element missing data-action: ",u);switch(console.info("Menu Click: "+c,n),c){case"song:new":n.preventDefault(),this.editor.loadNewSongData(),this.editor.render();break;case"song:save":throw new Error("Todo");case"song:load-memory-uuid":n.preventDefault();let d=u.getAttribute("data-uuid")||null;this.editor.loadSongFromMemory(d);break;case"save:memory":n.preventDefault(),this.editor.saveSongToMemory(),this.editor.render();break;case"save:file":n.preventDefault(),this.editor.saveSongToFile();break;case"load:file":const p=n.target.querySelector("input[type=file]");this.editor.loadSongFromFileInput(p),console.log(n);break;case"group:add":n.preventDefault();let m=this.editor.renderer.generateInstructionGroupName(r);(m=prompt("Create new instruction group?",m))?this.editor.renderer.addInstructionGroup(m,[]):console.error("Create instruction group canceled");break;case"group:remove":n.preventDefault(),this.editor.renderer.removeInstructionGroup(r);break;case"group:rename":n.preventDefault();let h=prompt("Rename instruction group?",r);h?this.editor.renderer.renameInstructionGroup(r,h):console.error("Rename instruction group canceled");break;case"instruction:new-instrument":if(n.preventDefault(),null===(a=u.getAttribute("data-instrumentURL")))throw new Error("Missing instrument ID");s=this.editor.renderer.addInstrument(a);for(let n=0;n<l.length;n++)this.editor.renderer.replaceInstructionInstrument(s),this.editor.renderer.playInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l,o);break;case"instrument:add":if(n.preventDefault(),null===(a=u.getAttribute("data-instrumentURL")))throw new Error("Missing instrument ID");s=this.editor.renderer.addInstrument(a),this.editor.render();break;case"instruction:insert":if(n.preventDefault(),!(t=this.editorForms.getInstructionFormValues(!0)))return console.info("Insert canceled");if((e=u.getAttribute("data-command"))||(e=prompt("Set Command:",t[1])),!e)return console.info("Insert canceled");t[1]=e,i=this.editor.renderer.insertInstructionAtPosition(r,o[0],t),this.editor.render(),this.editor.renderer.playInstruction(t),this.editor.grid.selectIndicies(n,i,o);break;case"instruction:command":if(n.preventDefault(),(e=u.getAttribute("data-command"))||(e=prompt("Set Command:",this.editorForms.fieldInstructionCommand.value)),!e)return console.info("Insert canceled");for(let n=0;n<l.length;n++)this.editor.renderer.replaceInstructionCommand(r,l[n],e),this.editor.renderer.playInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l,o),this.editorForms.fieldInstructionCommand.focus();break;case"instruction:instrument":if(n.preventDefault(),null===(s=u.getAttribute("data-instrument")))throw new Error("Missing instrument ID");s=parseFloat(s);for(let n=0;n<l.length;n++)this.editor.renderer.replaceInstructionInstrument(r,l[n],s),this.editor.renderer.playInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l,o),this.editorForms.fieldInstructionInstrument.focus();break;case"instruction:duration":n.preventDefault();let f=u.getAttribute("data-duration");if(f||(f=prompt("Set Duration:",this.editorForms.fieldInstructionDuration.value)),f=parseFloat(f),isNaN(f)||f<0)throw new Error("Invalid duration value");for(let n=0;n<l.length;n++)this.editor.renderer.replaceInstructionDuration(r,l[n],f),this.editor.renderer.playInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l,o),this.editorForms.fieldInstructionDuration.focus();break;case"instruction:velocity":n.preventDefault();let g=u.getAttribute("data-velocity");if(g||(g=prompt("Set Velocity:",this.editorForms.fieldInstructionVelocity.value)),g=parseFloat(g),isNaN(g)||g<0)throw new Error("Invalid velocity value");for(let n=0;n<l.length;n++)this.editor.renderer.replaceInstructionVelocity(r,l[n],g),this.editor.renderer.playInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l,o),this.editorForms.fieldInstructionVelocity.focus();break;case"instruction:delete":n.preventDefault();for(let n=0;n<l.length;n++)this.editor.renderer.deleteInstructionAtIndex(r,l[n]);this.editor.render(),this.editor.grid.selectIndicies(n,l[0],o);break;case"menu:toggle":n.preventDefault();break;default:console.warn("Unknown menu command: "+c)}}update(){const n=this.editor.grid;if(n&&n.groupName){const e=n.selectedIndicies;this.classList.remove("show-control-tracker-modify"),e.length>0&&this.classList.add("show-control-tracker-modify")}}render(){this.innerHTML=`<ul class="menu">\n                <li>\n                    <span class="key">F</span>ile\n                    <ul class="submenu">\n                        <li>\n                            <span data-action="song:new">\n                                <span class="key">N</span>ew song\n                            </span>\n                        </li>\n                        <li>\n                            <span class="key">O</span>pen song &#9658;\n                            <ul class="submenu">\n                                <li>\n                                    <span>from <span class="key">M</span>emory &#9658;</span>\n                                    <ul class="submenu">\n                                    ${this.editor.values.length>0?`\n                                        ${this.editor.values.getValues("song-recent-list",(n,e)=>`<li data-action="song:load-memory-uuid" data-uuid="${n}"><span>${e}</span></li>`)}\n                                    `:'<li class="disabled"><span>No Recent Songs</span></li>'}\n                                    </ul>\n                                </li>\n                                <li>\n                                    <form action="#" class="form-menu-load-file submit-on-change" data-action="load:file">\n                                        <label>\n                                            from <span class="key">F</span>ile\n                                            <input type="file" name="file" accept=".json,.mid,.midi" style="display: none" />\n                                        </label>\n                                    </form>\n                                </li>\n                                <li class="disabled" data-action="load:url"><span>from <span class="key">U</span>rl</span></li>\n                            </ul>\n                        </li>\n                        <li>\n                            <span class="key">S</span>ave song &#9658;\n                            <ul class="submenu">\n                                <li class="disabled" data-action="song:server-sync"><span>to <span class="key">S</span>erver</span><input type="checkbox" ${this.editor.webSocket?'checked="checked"':""}></li>\n                                <li data-action="save:memory"><span>to <span class="key">M</span>emory</span></li>\n                                <li data-action="save:file"><span>to <span class="key">F</span>ile</span></li>    \n                            </ul>\n                        </li> \n                        <li>\n                            <span class="key">I</span>mport song &#9658;\n                            <ul class="submenu">\n                                <li>\n                                    <form action="#" class="form-menu-load-file submit-on-change" data-action="load:file">\n                                        <label>\n                                            from <span class="key">M</span>idi file\n                                            <input type="file" name="file" accept=".mid,.midi" style="display: none" />\n                                        </label>\n                                    </form>\n                                </li>\n                            </ul>\n                        </li> \n                        <li>\n                            <span class="disabled"><span class="key">E</span>xport song &#9658;</span>\n                            <ul class="submenu">\n                                <li class="disabled" data-action="export:file"><span>to audio file</span></li>\n                            </ul>\n                        </li>     \n                    </ul>\n                </li>\n                <li>\n                    <span class="key">E</span>dit\n                    <ul class="submenu composer-context-menu">\n                        <li class="control-tracker-insert">\n                            <span>Insert <span class="key">N</span>ew Command &#9658;</span>\n                            <ul class="submenu">\n                                <li>\n                                    <span class="key">F</span>requency &#9658;\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("note-frequency-octaves",(n,e)=>`<li>\n                                                <span>Octave ${e}</span>\n                                                <ul class="submenu">\n                                                ${this.editor.values.getValues("note-frequencies",(e,t)=>`<li data-action="instruction:insert" data-command="${e+n}"><span>${t}${n}</span>`)}\n                                                </ul>\n                                            </li>`)}\n                                            <li data-action="instruction:insert"><span>Custom Command</span></li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <span class="key">N</span>amed &#9658;\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("command-instrument-frequencies",(n,e)=>`<li data-action="instruction:insert" data-command="${n}"><span>${e}</span></li>`)}\n                                            <li data-action="instruction:insert"><span>Custom Command</span></li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <span class="key">G</span>roup &#9658;\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("command-group-execute",(n,e)=>`<li data-action="instruction:insert" data-command="${n}"><span>${e}</span></li>`)}\n                                            <li data-action="instruction:insert"><span>Custom Command</span></li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                        <li class="control-tracker-modify">\n                            Set <span class="key">C</span>ommand &#9658;\n                            <ul class="submenu">\n                                <li>\n                                    <span class="key">F</span>requency &#9658;\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("note-frequency-octaves",(n,e)=>`<li>\n                                                <span>Octave ${e}</span>\n                                                <ul class="submenu">\n                                                ${this.editor.values.getValues("note-frequencies",(e,t)=>`<li data-action="instruction:command" data-command="${e+n}"><span>${t}${n}</span>`)}\n                                                </ul>\n                                            </li>`)}\n                                    </ul>\n                                </li>\n                                <li>\n                                    <span class="key">N</span>amed &#9658;\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("command-instrument-frequencies",(n,e)=>`<li data-action="instruction:command" data-command="${n}"><span>${e}</span></li>`)}\n                                    </ul>\n                                </li>\n                                <li>\n                                    <span><span class="key">G</span>roup &#9658;</span>\n                                    <ul class="submenu">\n                                        ${this.editor.values.getValues("command-group-execute",(n,e)=>`<li data-action="instruction:command" data-command="${n}"><span>${e}</span></li>`)}\n                                    </ul>\n                                </li>\n                                <li data-action="instruction:command"><span>Custom Command</span></li>\n                            </ul>\n                        </li>\n                        <li class="control-tracker-modify">\n                            <span>Set <span class="key">I</span>nstrument &#9658;</span>\n                            <ul class="submenu">\n                                ${this.editor.values.getValues("song-instruments",(n,e)=>`<li data-action="instruction:instrument" data-instrument="${n}"><span>${e}</span></li>`)}\n                                    <li>\n                                        <span>Add new Instrument &#9658;</span>\n                                        <ul class="submenu">\n                                            ${this.editor.values.getValues("instruments-available",(n,e)=>`<li data-action="instruction:new-instrument" data-instrumentURL="${n}"><span>${e}</span></li>`)}\n                                        </ul>\n                                    </li>\n                            </ul>\n                        </li>\n                        <li class="control-tracker-modify">\n                            <span>Set <span class="key">D</span>uration &#9658</span>\n                            <ul class="submenu">\n                                <li data-action="instruction:duration"><span>Custom Duration</span></li>\n                                ${this.editor.values.getValues("durations",(n,e)=>`<li data-action="instruction:duration" data-duration="${n}"><span>${e}</span></li>`)}\n                            </ul>\n                        </li>\n                        <li class="control-tracker-modify">\n                            <span>Set <span class="key">V</span>elocity &#9658</span>\n                            <ul class="submenu">\n                                <li data-action="instruction:velocity"><span>Custom Velocity</span></li>\n                                ${this.editor.values.getValues("velocities",(n,e)=>`<li data-action="instruction:velocity" data-velocity="${n}"><span>${e}</span></li>`)}\n                            </ul>\n                        </li>\n                        <li data-action="instruction:panning" class="disabled control-tracker-modify"><span>Set <span class="key">P</span>anning</span></li>\n                        <li data-action="instruction:delete" class="control-tracker-modify"><span><span class="key">D</span>elete Note</span></li>\n                        <hr/>\n                        <li>\n                            <span>Edit <span class="key">R</span>ow &#9658;</span>\n                            <ul class="submenu">\n                                <li data-action="row:delete"><span><span class="key">D</span>elete Row</span></li>\n                            </ul>\n                        </li>\n                        <hr/>\n                        <li>\n                            <span>Edit <span class="key">G</span>roup &#9658;</span>\n                            <ul class="submenu">\n                                <li data-action="group:add"><span><span class="key">I</span>nsert new Group</span></li>\n                                <li data-action="group:delete"><span><span class="key">D</span>elete current Group</span></li>\n                                <li data-action="group:rename"><span><span class="key">R</span>ename current Group</span></li>\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <span class="key">V</span>iew\n                    <ul class="submenu">\n                        <li data-action="view:instruments"><span>&#10003; View <span class="key">I</span>nstruments</span></li>\n                    </ul>\n                </li>\n                <li>\n                    <span class="key">I</span>nstruments\n                    <ul class="submenu">\n                        <li>\n                            <span>Add new Instrument &#9658;</span>\n                            <ul class="submenu">\n                                ${this.editor.values.getValues("instruments-available",(n,e)=>`<li data-action="instrument:add" data-instrumentURL="${n}"><span>${e}</span></li>`)}\n                            </ul>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n`,this.update()}openContextMenu(n){let e=n.clientX,t=n.clientY;this.querySelectorAll("a.open").forEach(n=>n.classList.remove("open"));const s=this.querySelector(".composer-context-menu");s.classList.add("open-context-menu"),s.classList.add("open"),s.style.left=e+"px",s.style.top=t+"px"}closeMenu(){const n=this.querySelector(".composer-context-menu");n.classList.remove("open-context-menu"),n.classList.remove("open"),n.removeAttribute("style"),this.querySelectorAll(".menu-item.open,.submenu.open").forEach(n=>n.classList.remove("open"))}}customElements.define("asc-menu",AudioSourceComposerMenu);class AudioSourceComposerValues{constructor(e){this.editor=e}getValues(e,t){let r,n="";const s=this.editor.getSongData()||{};switch(e){case"song-recent-list":const o=(new AudioSourceStorage).getRecentSongList();for(let e=0;e<o.length;e++)n+=t(o[e].guid,o[e].title);break;case"song-instruments":if(s.instruments){const e=s.instruments;for(let r=0;r<e.length;r++){const s=e[r]||{name:"No Instrument Loaded"};n+=t(r,this.editor.values.format(r,"instrument")+": "+(s.name?s.name:s.url.split("/").pop()))}}break;case"instruments-available":if(this.editor.instrumentLibrary){const e=this.editor.instrumentLibrary;e.instruments&&e.instruments.forEach(e=>{"object"!=typeof e&&(e={url:e}),e.title||(e.title=e.url.split("/").pop()),n+=t(e.url,e.title)})}break;case"command-instrument-frequencies":for(let e=0;e<s.instruments.length;e++)if(this.editor.renderer.isInstrumentLoaded(e)){const r=this.editor.renderer.getInstrument(e);if(r.getFrequencyAliases){const s=r.getFrequencyAliases();Object.values(s).forEach(r=>n+=t(r,r,`data-instrument="${e}"`))}}break;case"note-frequencies":r=this.editor.renderer.noteFrequencies;for(let e=0;e<r.length;e++){const s=r[e];n+=t(s,s)}break;case"note-frequencies-all":r=this.editor.renderer.noteFrequencies;for(let e=1;e<=6;e++)for(let s=0;s<r.length;s++){const o=r[s]+e;n+=t(o,o)}break;case"note-frequency-octaves":for(let e=1;e<=7;e+=1)n+=t(e,""+e);break;case"velocities":for(let e=100;e>=0;e-=10)n+=t(e,e);break;case"durations":const i=this.editor.renderer.getSongTimeDivision();for(let e=64;e>1;e/=2)n+=t(1/e/1.5*i,`1/${e}t`),n+=t(1/e*i,`1/${e}`),n+=t(1/e*1.5*i,`1/${e}d`);for(let e=1;e<=16;e++)n+=t(e*i,e+"B");break;case"named-durations":for(let e=64;e>1;e/=2)n+=t(`1/${e}t`,`1/${e}t`),n+=t(`1/${e}`,`1/${e}`),n+=t(`1/${e}d`,`1/${e}d`);for(let e=1;e<=16;e++)n+=t(e+"B",e+"B");break;case"beats-per-measure":for(let e=1;e<=12;e++)n+=t(e,e+` beat${e>1?"s":""} per measure`);break;case"beats-per-minute":for(let e=40;e<=300;e+=10)n+=t(e,e+` beat${e>1?"s":""} per minute`);break;case"groups":s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t(e,e)});break;case"command-group-execute":s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t("@"+e,"@"+e)});break;default:throw new Error("Invalid Value type: "+e)}return n}renderEditorFormOptions(e,t){let r="";return this.getValues(e,function(e,n,s=""){const o=!!t&&t(e);r+=`<option value="${e}" ${o?' selected="selected"':""}${s}>${n}</option>`}),r}format(e,t){switch(t){case"duration":let r;return this.getValues("durations",(t,n)=>{e!==t&&e!==n||(r=n)}),r?r:(e=parseFloat(e).toFixed(2)).replace(".00","t");case"instrument":return"number"!=typeof e?"N/A":e<10?"0"+e:""+e;case"velocity":return"number"!=typeof e?"N/A":100===e?"Max":e+"";case"command":return e;default:throw new Error("Unknown format: "+t)}}}class AudioSourceComposerWebsocket{constructor(e){this.editor=e}initWebSocket(e){if(e||(e=null),!("WebSocket"in window))return void console.warn("WebSocket is not supported by your Browser!");this.webSocket&&(this.webSocket.close(),this.webSocket=null);const t=window.origin.replace(/^http/i,"ws")+"/song/"+(e||""),s=new WebSocket(t),o=this.onWebSocketEvent.bind(this);s.addEventListener("open",o),s.addEventListener("message",o),s.addEventListener("close",o),this.webSocket=s}loadSongFromServer(e){this.setAttribute("uuid",e),this.initWebSocket(e)}onError(e){this.webSocket&&this.webSocket.send(JSON.stringify({type:"error",message:e.message||e,stack:e.stack}))}onWebSocketEvent(e){switch(e.type){case"open":break;case"close":this.webSocketAttempts++,this.webSocketAttempts<=this.status.webSocket.maxAttempts?(setTimeout(()=>this.initWebSocket(),this.status.webSocket.reconnectTimeout),console.info("Reopening WebSocket in "+this.status.webSocket.reconnectTimeout/1e3+" seconds ("+this.webSocketAttempts+")")):console.info("Giving up on WebSocket");break;case"message":if("{"===e.data[0]){const t=JSON.parse(e.data);switch(t.type){case"history:entry":const e=editor.renderer;e.applyHistoryActions(t.songHistory),this.status.history.currentStep=t.songHistory[t.songHistory.length-1].step,this.player.loadAllInstruments(),this.render(),this.grid.focus();const s=e.songData.uuid;if(s){let t=JSON.parse(localStorage.getItem("server-recent-uuid")||"[]");(t=t.filter(e=>e[0]!==s)).unshift([s,e.songData.title,(new Date).getTime()]),localStorage.setItem("server-recent-uuid",JSON.stringify(t))}break;case"history:error":case"error":console.error("WS:"+t.message,t.stack);break;default:console.log("Unrecognized web socket event: "+t.type)}}else console.log("Unrecognized web socket message: "+e.data)}}}class AudioSourceLibraries{constructor(){}get sources(){return{MidiParser:["https://cdn.jsdelivr.net/gh/colxi/midi-parser-js/src/main.js"],LZString:["https://cdn.jsdelivr.net/gh/pieroxy/lz-string/libs/lz-string.min.js"]}}async loadScript(r){await new Promise((i,t)=>{const s=document.createElement("script");s.src=r,s.onload=(r=>i()),document.head.appendChild(s)})}async loadLibrary(r,i=null){if(i||(i=(()=>void 0!==window[r])),i())return!0;const t=this.sources[r];for(let r=0;r<t.length;r++)if(await this.loadScript(t[r]),i())return!0;throw new Error(`Failed to load ${r} Library`)}async getMidiParser(){return await this.loadLibrary("MidiParser"),MidiParser}async getLZString(){return await this.loadLibrary("LZString"),LZString}}class AudioSourceRenderer{constructor(t=null){this.dispatchElement=t,this.audioContext=null,this.songData={},this.loadedInstruments=[],this.loadedInstrumentClasses={},this.seekLength=.5,this.seekPosition=0,this.volumeGain=null,this.playing=!1,this.activeGroups={},this.loadSongData({}),this.songHistory=[],document.addEventListener("instrument:loaded",t=>this.onSongEvent(t))}get noteFrequencies(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}getCommandFromMIDINote(t){const n=Math.floor(t/12),e=t%12;return this.noteFrequencies[e]+n}getAudioContext(){return this.audioContext?this.audioContext:(this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.initAllInstruments(this.audioContext),this.audioContext)}getSongData(){return this.songData}getSongTimeDivision(){return this.songData.timeDivision||384}getSongHistory(){return this.songHistory}getStartingBeatsPerMinute(){return this.songData.beatsPerMinute}getVolumeGain(){if(!this.volumeGain){const t=this.getAudioContext();let n=t.createGain();n.gain.value=AudioSourceRenderer.DEFAULT_VOLUME,n.connect(t.destination),this.volumeGain=n}return this.volumeGain}getVolume(){return this.volumeGain?100*this.volumeGain.gain.value:100*AudioSourceRenderer.DEFAULT_VOLUME}setVolume(t){const n=this.getVolumeGain();n.gain.value!==t&&(n.gain.value=t/100,console.info("Setting volume: ",t))}dispatchEvent(t){this.dispatchElement&&this.dispatchElement.dispatchEvent(t)}onSongEvent(t){switch(t.type){case"instrument:loaded":const n=t.detail.class,e=t.detail.file;this.loadedInstrumentClasses[e]=n,this.loadAllInstruments()}}loadSongFromMIDIData(t){console.log(t);const n={};this.songData.instructions=n,this.songData.timeDivision=t.timeDivision,n.root=[];for(let e=0;e<t.track.length;e++){n.root.push([0,"@track"+e]);const r=e,i=[];n["track"+e]=i;const s={},o=t.track[e].event;let a=0,u=0;for(let t=0;t<o.length;t++){const n=o[t];switch(a+=n.deltaTime,n.type){case 8:let t=this.getCommandFromMIDINote(n.data[0]);if(s[t]){let e=a-s[t][0];s[t][1][3]=e,console.log("OFF",n.deltaTime,t,e),delete s[t]}break;case 9:let e=this.getCommandFromMIDINote(n.data[0]),o=n.data[1];if(0===o&&s[e]){let t=a-s[e][0];s[e][1][3]=t,console.log("OFF",n.deltaTime,e,t),delete s[e];break}let c=n.deltaTime+(a-u);u=a;const l=[c,e,r,0,o];s[e]=[a,l],i.push(l),console.log("ON ",c,e,o)}}}}loadSongData(t,n=[]){t=Object.assign({},{instruments:[],instructions:{root:[]}},t),this.songData=t,this.songHistory=n||[],Object.keys(t.instructions).map((t,n)=>this.processAllInstructionData(t));if(0===t.instruments.length);else for(let n=0;n<t.instruments.length;n++)0,this.loadInstrument(n);this.dispatchEvent(new CustomEvent("song:loaded"))}processAllInstructionData(t){const n=this.songData.instructions[t];for(let t=0;t<n.length;t++){const e=n[t];n[t]=this.processInstructionData(e)}}processInstructionData(t){return SongInstruction.parse(t).data}findInstructionGroup(t){if(t instanceof SongInstruction&&(t=t.data),"object"!=typeof t)throw new Error("Invalid instruction object");for(let n in this.songData.instructions)if(this.songData.instructions.hasOwnProperty(n)&&-1!==this.songData.instructions[n].indexOf(t))return n;throw new Error("Instruction not found in songData")}getInstructions(t,n=null){let e=this.songData.instructions[t];if(!e)throw new Error("Instruction group not found: "+t);return n&&("number"==typeof n&&(n=[n]),e=e.filter((t,e)=>-1!==n.indexOf(e))),e.map(t=>new SongInstruction(t))}getInstructionRange(t,n,e=null){let r=this.songData.instructions[t];if(!r)throw new Error("Instruction group not found: "+t);const i=[];for(let t=n;(null===e||t<e)&&r[t];t++){const n=new SongInstruction(r[t]);if(i.length>0&&null===e&&n.deltaDuration)break;i.push(n)}return i}getInstructionIndex(t,n){t instanceof SongInstruction&&(t=t.data);const e=this.songData.instructions[n].indexOf(t);if(-1===e)throw new Error("Instruction not found in instruction list");return e}getInstruction(t,n,e=!0){let r=this.songData.instructions[t];if(!Number.isInteger(n))throw new Error("Invalid Index: "+typeof n);if(e){if(n>=r.length)throw new Error(`Instruction index is greater than group length: ${n} >= ${r.length} for groupName: ${t}`);if(!r[n])throw new Error(`Instruction not found at index: ${n} for groupName: ${t}`)}return new SongInstruction(r[n])}async play(t){this.seekPosition=t||0;const n=this.getAudioContext().currentTime-this.seekPosition;this.playing=!0,this.dispatchEvent(new CustomEvent("song:start")),await this.playInstructions(this.songData.root||"root",n),this.seekPosition=this.getAudioContext().currentTime-(this.seekPosition+n),this.dispatchEvent(new CustomEvent("song:end")),console.log("Seek position: ",this.seekPosition)}pause(){this.playing=!1,this.dispatchEvent(new CustomEvent("song:pause"))}stopAllPlayback(){for(const t in this.activeGroups)this.activeGroups.hasOwnProperty(t)&&(this.activeGroups[t]=!1)}isPlaybackActive(){for(const t in this.activeGroups)if(this.activeGroups.hasOwnProperty(t)&&!0===this.activeGroups[t])return!0;return!1}async playInstructions(t,n){const e=t+n;this.activeGroups[e]=!0,console.time("Group:"+t),n=n||this.getAudioContext().currentTime;const r=[];await this.eachInstructionAsync(t,async(i,s,o)=>{if(!this.activeGroups[e])return!1;const a=this.getAudioContext().currentTime-n;if(a+this.seekLength<o.groupPlaybackTime){const t=Math.floor(1e3*(o.groupPlaybackTime-(a+this.seekLength))*.9);await new Promise((n,e)=>{setTimeout(n,t)})}if(s.isGroupCommand()){let e=s.getGroupFromCommand();if(!this.songData.instructions[e])throw new Error("Instruction groupName not found: "+e);if(e===t)return void console.error("Recursive group call. Skipping group '"+e+"'");const i=this.playInstructions(e,n+o.groupPlaybackTime);r.push(i)}else this.playInstruction(s,n+o.groupPlaybackTime,o)});for(let t=0;t<r.length;t++)await r[t];delete this.activeGroups[e],console.timeEnd("Group:"+t)}eachInstruction(t,n,e){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const r=new InstructionIterator(this.songData.instructions[t],t,e?e.timeDivision:this.getSongTimeDivision(),e?e.currentBPM:this.getStartingBeatsPerMinute(),e?e.groupPositionInTicks:0);let i=r.nextInstruction();for(;i;){if(!1===n(r.currentIndex,i,r))break;i=r.nextInstruction()}return r.groupPlaybackTime}async eachInstructionAsync(t,n,e){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const r=new InstructionIterator(this.songData.instructions[t],t,e?e.timeDivision:this.getSongTimeDivision(),e?e.currentBPM:this.getStartingBeatsPerMinute(),e?e.groupPositionInTicks:0);let i=r.nextInstruction();for(;i;){if(!1===await n(r.currentIndex,i,r))break;i=r.nextInstruction()}return r.groupPlaybackTime}playInstructionAtIndex(t,n,e=null,r=null){const i=this.getInstruction(t,n);this.playInstruction(i,e,r)}async playInstruction(t,n=null,e=null){if(Array.isArray(t)&&(t=new SongInstruction(t)),t.isGroupCommand())return await this.playInstructions(t.getGroupFromCommand(),n);let r=this.getStartingBeatsPerMinute();e&&(r=e.currentBPM);let i=this.getSongTimeDivision();const s=t.getDurationAsTicks(i)/i/(r/60);n||0===n||(n=this.getAudioContext().currentTime),this.playInstrument(t.instrument,t.command,n,s,t.velocity);const o={currentTime:this.getAudioContext().currentTime,startTime:n,duration:s,instruction:t,stats:e||{}};this.dispatchEvent(new CustomEvent("note:play",{detail:o}))}playInstrument(t,n,e,r,i){if(t||0===t||(console.warn("No instrument set for instruction. Using instrument 0"),t=0),!this.songData.instruments[t])return void console.error(`Instrument ${t} is not loaded. Playback skipped. `);let s=this.getInstrument(t);const o=this.getVolumeGain();return s.play(o,n,e,r,i)}getInstrumentConfig(t,n=!0){const e=this.getInstrumentList();if(e[t])return e[t];if(n)throw new Error("Instrument ID not found: "+t);return null}getInstrument(t,n=!0){if(this.loadedInstruments[t])return this.loadedInstruments[t];if(n)throw new Error("Instrument not yet loaded: "+t);return null}getInstrumentList(){return this.getSongData().instruments.slice()}loadInstrumentClass(t){const n=(t=new URL(t,document.location)).pathname.split("/").pop();if(void 0!==this.loadedInstrumentClasses[n]){if(null!==this.loadedInstrumentClasses[n])throw new Error("Instrument class is already loaded: "+n);return void console.warn("Instrument class is loading: "+n)}this.loadedInstrumentClasses[n]=null;const e=document.createElement("script");e.src=t,document.head.appendChild(e)}loadInstrument(t,n=!1){if(t=parseInt(t),!n&&this.loadedInstruments[t])return!0;this.loadedInstruments[t]=null;const e=this.getInstrumentConfig(t),r=new URL(e.url,document.location),i=r.pathname.split("/").pop(),s=this.loadedInstrumentClasses[i];if(!s)return this.loadInstrumentClass(r),!1;const o=new s(e);return this.loadedInstruments[t]=o,this.dispatchEvent(new CustomEvent("instrument:instance",{detail:{instance:o,instrumentID:t},bubbles:!0})),this.audioContext&&this.initInstrument(t,this.audioContext),!0}loadAllInstruments(){const t=this.getInstrumentList();for(let n=0;n<t.length;n++)this.loadInstrument(n)}initInstrument(t,n){this.getInstrument(t).init(n)}initAllInstruments(t){const n=this.getInstrumentList();for(let e=0;e<n.length;e++)this.initInstrument(e,t)}generateGUID(){var t=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(t+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var e=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===n?e:3&e|8).toString(16)})}generateInstructionGroupName(t){const n=this.getSongData();let e;for(let r=99;r>=0;r--){const i=t+"."+r;n.instructions.hasOwnProperty(i)||(e=i)}if(!e)throw new Error("Failed to generate group name");return e}setSongTitle(t){return this.replaceDataPath("title",t)}setSongVersion(t){return this.replaceDataPath("version",t)}addInstrument(t){"object"!=typeof t&&(t={url:t});const n=this.songData.instruments.length;return this.replaceDataPath(["instruments",n],t),this.loadInstrument(n),n}replaceInstrument(t,n){const e=this.songData.instruments;if(!e[t])throw new Error("Invalid instrument ID: "+t);const r=e[t];return"object"!=typeof n&&(n={url:n}),r.name&&!n.name&&(n.name=r.name),this.replaceDataPath(["instruments",t],n).oldData}removeInstrument(t){if(!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);return delete this.loadedInstruments[t],this.replaceDataPath(["instruments",t]).oldData}replaceInstrumentParam(t,n,e){if(t=parseInt(t),!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);return this.replaceDataPath(["instruments",t,n],e).oldData}isInstrumentLoaded(t){return!!this.loadedInstruments[t]}applyHistoryActions(t){for(let n=0;n<t.length;n++){const e=t[n];switch(e.action){case"reset":Object.assign(this.songData,e.data);break;case"insert":this.insertDataPath(e.path,e.data);break;case"delete":this.deleteDataPath(e.path);break;case"replace":this.replaceDataPath(e.path,e.data)}}this.songHistory=[],this.processAllInstructionData()}findDataPath(t){if(!Array.isArray(t))throw new Error("Path list must be an array");if("*"===t[0])return{value:this.songData,parent:{key:this.songData},key:"key"};let n,e=this.songData,r=null;for(let i=0;i<t.length;i++)r=t[i],/^\d+$/.test(r)&&(r=parseInt(r)),n=e,e=e[r];if(!n)throw new Error("Invalid path: "+path);return{value:e,parent:n,key:r}}insertDataPath(t,n){const e=this.findDataPath(t);if(n=AudioSourceRenderer.sanitizeInput(n),"number"!=typeof e.key)throw new Error("Insert action requires numeric key");if(e.parent.length<e.key)throw new Error(`Insert position out of index: ${e.parent.length} < ${e.key} for path: ${t}`);return e.parent.splice(e.key,0,n),this.queueHistoryAction(t,n)}deleteDataPath(t){const n=this.findDataPath(t),e=n.parent[n.key];if("number"==typeof n.key){if(n.parent.length<n.key)throw new Error(`Delete position out of index: ${n.parent.length} < ${n.key} for path: ${t}`);n.parent.splice(n.key,1)}else delete n.parent[n.key];return this.queueHistoryAction(t,null,e)}replaceDataPath(t,n){const e=this.findDataPath(t);let r=null;return void 0!==(n=AudioSourceRenderer.sanitizeInput(n))?(void 0!==e.parent[e.key]&&(r=e.parent[e.key]),e.parent[e.key]=n):delete e.parent[e.key],this.queueHistoryAction(t,n,r)}queueHistoryAction(t,n=null,e=null){const r=[t];return null===n&&null===e||r.push(n),null!==e&&r.push(e),this.songHistory.push(r),this.dispatchEvent(new CustomEvent("song:modified",{detail:r}),1),r}insertInstructionAtPosition(t,n,e){if(!e)throw new Error("Invalid insert instruction");const r=SongInstruction.parse(e);let i=this.songData.instructions[t];const s=new InstructionIterator(this.songData.instructions[t],t,this.getSongTimeDivision());let o;for(;o=s.nextInstruction();){if(s.groupPositionInTicks>n){const e=[n-(s.groupPositionInTicks-o.deltaDuration),s.groupPositionInTicks-n],i=s.currentIndex;return this.replaceInstructionDeltaDuration(t,i,e[1]),r.deltaDuration=e[0],this.insertInstructionAtIndex(t,i,r),i}if(s.groupPositionInTicks===n){let n;for(n=s.currentIndex+1;n<i.length&&!(new SongInstruction(i[n]).deltaDuration>0);n++);return this.insertInstructionAtIndex(t,n,r),n}}if(n<=groupPosition)throw new Error("Something went wrong");let a=i.length;return r.deltaDuration=n-groupPosition,this.insertInstructionAtIndex(t,a,r),a}insertInstructionAtIndex(t,n,e){if(e instanceof SongInstruction&&(e=e.data),!e)throw new Error("Invalid insert instruction");this.insertDataPath(["instructions",t,n],e)}deleteInstructionAtIndex(t,n){const e=this.getInstruction(t,n);if(e.deltaDuration>0){const r=this.getInstruction(t,n+1);r&&this.replaceInstructionDeltaDuration(t,n+1,r.deltaDuration+e.deltaDuration)}return this.deleteDataPath(["instructions",t,n]).oldData}replaceInstructionDeltaDuration(t,n,e){return this.replaceInstructionParam(t,n,0,e)}replaceInstructionCommand(t,n,e){return this.replaceInstructionParam(t,n,1,e)}replaceInstructionInstrument(t,n,e){return this.replaceInstructionParam(t,n,2,e)}replaceInstructionDuration(t,n,e){return this.replaceInstructionParam(t,n,3,e)}replaceInstructionVelocity(t,n,e){return this.replaceInstructionParam(t,n,4,e)}replaceInstructionParam(t,n,e,r){return null===r?this.deleteDataPath(["instructions",t,n,e]).oldData:this.replaceDataPath(["instructions",t,n,e],r).oldData}addInstructionGroup(t,n){if(this.songData.instructions.hasOwnProperty(t))throw new Error("New group already exists: "+t);this.replaceDataPath(["instructions",t],n||[])}removeInstructionGroup(t){if("root"===t)throw new Error("Cannot remove root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);return this.replaceDataPath(["instructions",t]).oldData}renameInstructionGroup(t,n){if("root"===t)throw new Error("Cannot rename root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);if(this.songData.instructions.hasOwnProperty(n))throw new Error("New group already exists: "+n);const e=this.replaceDataPath(["instructions",t]).oldData;this.replaceDataPath(["instructions",n],e)}static sanitizeInput(t){if(Array.isArray(t)){for(let n=0;n<t.length;n++)t[n]=AudioSourceRenderer.sanitizeInput(t[n]);return t}if("object"==typeof t){for(const n in t)t.hasOwnProperty(n)&&(t[n]=AudioSourceRenderer.sanitizeInput(t[n]));return t}if("string"!=typeof t)return t;if("undefined"!=typeof require){var n=new(require("bad-words"));if(n.isProfane(t))throw new Error("Swear words are forbidden");t=n.clean(t)}var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>'"]/g,function(t){return e[t]})}onInput(t){t.defaultPrevented||t.type}}AudioSourceRenderer.DEFAULT_VOLUME=.7;class SongInstruction{constructor(t){this.data=t||[0,"",0]}get deltaDuration(){return this.data[0]}set deltaDuration(t){this.data[0]=SongInstruction.parseDurationAsTicks(t)}get command(){return this.data[1]||null}set command(t){this.data[1]=t}get instrument(){return void 0===this.data[2]?null:this.data[2]}set instrument(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Instrument ID");this.data[2]=t}get duration(){return void 0===this.data[3]?null:this.data[3]}set duration(t){if(t=parseFloat(t),Number.isNaN(t))throw new Error("Invalid Duration");this.data[3]=t}getDurationAsTicks(t){return SongInstruction.parseDurationAsTicks(this.duration,t)}get velocity(){return void 0===this.data[4]?null:this.data[4]}set velocity(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Velocity");this.data[4]=t}get panning(){return void 0===this.data[5]?null:this.data[5]}set panning(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Panning");this.data[5]=t}isGroupCommand(){return this.command&&"@"===this.command[0]}getGroupFromCommand(){return this.command.substr(1)}static parse(t){return t instanceof SongInstruction?t:("number"==typeof t&&(t=[t]),"string"==typeof t&&((t=t.split(":"))[0]=parseFloat(t[0]),t[1]=parseInt(t[1])),"string"==typeof t[0]&&t.unshift(0),new SongInstruction(t))}static parseDurationAsTicks(t,n){if(null===t||"number"==typeof t)return t;switch(t[t.length-1].toLowerCase()){case"t":return parseInt(t.substr(0,t.length-1));case"b":return n*parseInt(t.substr(0,t.length-1))}throw new Error("Invalid Duration: "+t)}}class InstructionIterator{constructor(t,n,e,r,i=0){this.instructionList=t,this.groupName=n,this.timeDivision=e,this.currentBPM=r,this.groupPositionInTicks=i,this.groupPlaybackTime=0,this.currentIndex=-1}nextInstruction(){if(this.currentIndex++,!this.instructionList[this.currentIndex])return null;let t=new SongInstruction(this.instructionList[this.currentIndex]);if(t.deltaDuration){this.groupPositionInTicks+=t.deltaDuration;const n=t.deltaDuration/this.timeDivision/(this.currentBPM/60);this.groupPlaybackTime+=n}return t}}class AudioSourceStorage{constructor(){}async getRecentSongList(){return await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}generateDefaultSong(){return{title:`Untitled (${(new Date).toJSON().slice(0,10).replace(/-/g,"/")})`,guid:this.generateGUID(),version:"0.0.1",root:"root",created:(new Date).getTime(),timeDivision:384,beatsPerMinute:120,beatsPerMeasure:4,instruments:[{url:"instrument/audio-source-synthesizer.js"}],instructions:{root:[]}}}async encodeForStorage(e,t=null,r=null){let o=JSON.stringify(e,t,r);const n=new AudioSourceLibraries;return(await n.getLZString()).compress(o)}async decodeForStorage(e){if(!e)return null;const t=new AudioSourceLibraries;return e=(await t.getLZString()).decompress(e)||e,JSON.parse(e)}async saveSongToMemory(e,t){e.guid||(e.guid=this.generateGUID());let r=[];try{r=await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}catch(e){console.error(e)}(r=r.filter(t=>t.guid!==e.guid)).unshift({guid:e.guid,title:e.title}),localStorage.setItem("song-recent-list",await this.encodeForStorage(r)),localStorage.setItem("song:"+e.guid,await this.encodeForStorage(e)),localStorage.setItem("song-history:"+e.guid,await this.encodeForStorage(t)),console.info("Song saved to memory: "+e.guid,e)}saveSongToFile(e){const t="/** INSTRUCTIONS-"+this.generateGUID()+" **/";let r=JSON.stringify(e.instructions),o=JSON.stringify(Object.assign({},e,{instructions:t}),null,"\t");o=o.replace('"'+t+'"',r);const n="data:text/json;charset=utf-8,"+encodeURIComponent(o),a=document.createElement("a");a.setAttribute("href",n),a.setAttribute("download",e.title||"untitled"),document.body.appendChild(a),a.click(),a.remove()}async loadSongFromMemory(e){let t=localStorage.getItem("song:"+e);if(!t)throw new Error("Song Data not found for guid: "+e);let r=await this.decodeForStorage(t);if(!r)throw new Error("Invalid Song Data: "+t);return r}loadSongHistoryFromMemory(e){let t=localStorage.getItem("song-history:"+e);return t?this.decodeForStorage(t):null}async loadMIDIFile(e){"undefined"==typeof MidiParser&&await new Promise((e,t)=>{const r=document.createElement("script");r.src="https://cdn.jsdelivr.net/gh/colxi/midi-parser-js/src/main.js",r.onload=(t=>e()),document.head.appendChild(r)});const t=await new Promise((t,r)=>{let o=new FileReader;o.readAsArrayBuffer(e.files[0]),o.onload=(e=>{t(e.target.result)})});return MidiParser.parse(new Uint8Array(t))}generateGUID(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var r=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?r:3&r|8).toString(16)})}}})();