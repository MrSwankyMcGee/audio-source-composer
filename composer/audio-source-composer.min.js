(function(){class AudioSourceComposerElement extends HTMLElement{constructor(){super(),this.saveSongToMemoryTimer=null,this.instrumentLibrary=null,this.longPressTimeout=null,this.webSocket=new AudioSourceComposerWebsocket(this),this.keyboard=new AudioSourceComposerKeyboard(this),this.renderer=new AudioSourceRenderer(this),this.status={groupHistory:[],currentOctave:3,currentInstrumentID:0,currentRenderDuration:null,previewInstructionsOnSelect:!1,longPressTimeout:500,lastMouseUp:null,mouse:{},doubleClickTimeout:500,autoSaveTimeout:4e3},this.shadowDOM=null,this.sources.loadDefaultInstrumentLibrary()}get sources(){return this.renderer.sources}get values(){return this.renderer.values}get tracker(){return this.shadowDOM.querySelector("asc-tracker")}get container(){return this.shadowDOM.querySelector(".asc-container")}get scriptDirectory(){return this.sources.getScriptDirectory("")}connectedCallback(){this.shadowDOM=this.attachShadow({mode:"open"});const e=e=>this.onInput(e);this.shadowDOM.addEventListener("submit",e),this.shadowDOM.addEventListener("change",e),this.shadowDOM.addEventListener("blur",e),this.shadowDOM.addEventListener("keydown",e),this.shadowDOM.addEventListener("contextmenu",e),this.shadowDOM.addEventListener("mousedown",e),this.shadowDOM.addEventListener("mouseup",e),this.shadowDOM.addEventListener("mousemove",e),this.shadowDOM.addEventListener("touchstart",e),this.shadowDOM.addEventListener("touchend",e),this.shadowDOM.addEventListener("touchemove",e),this.shadowDOM.addEventListener("doubleclick",e);const t=e=>this.onSongEvent(e);this.addEventListener("song:loaded",t),this.addEventListener("song:start",t),this.addEventListener("song:end",t),this.addEventListener("song:pause",t),this.addEventListener("song:modified",t),this.addEventListener("note:play",t),this.addEventListener("instrument:loaded",t),this.addEventListener("instrument:instance",t),this.addEventListener("instrument:library",t),this.addEventListener("instrument:modified",t),this.render(),this.focus(),this.loadDefaultSong(),navigator.requestMIDIAccess&&navigator.requestMIDIAccess().then(e=>{console.log("MIDI initialized",e);const t=[];e.inputs.forEach(e=>{t.push(e),e.addEventListener("midimessage",e=>this.onInput(e))}),console.log("MIDI input devices detected: "+t.map(e=>e.name).join(", "))},e=>{this.onError("error initializing MIDI: "+e)})}async loadDefaultSong(){const e=this.getAttribute("src");if(e)try{return await this.loadSongFromSrc(e),!0}catch(t){console.error("Failed to load from src: ",e,t)}return!!await this.loadRecentSongData()||(this.loadNewSongData(),!1)}get currentGroup(){return this.status.currentGroup}get selectedIndicies(){return this.status.selectedIndicies}get selectedRange(){return this.status.selectedRange}getAudioContext(){return this.renderer.getAudioContext()}getSongData(){return this.renderer.getSongData()}loadNewSongData(){let e=(new AudioSourceStorage).generateDefaultSong(this.scriptDirectory);this.renderer.loadSongData(e),this.render()}async loadRecentSongData(){const e=new AudioSourceStorage;let t=await e.getRecentSongList();return!(!t[0]||!t[0].guid)&&(await this.loadSongFromMemory(t[0].guid),!0)}async saveSongToMemory(){const e=this.renderer.getSongData(),t=this.renderer.getSongHistory(),n=new AudioSourceStorage;await n.saveSongToMemory(e,t)}saveSongToFile(){const e=this.renderer.getSongData();(new AudioSourceStorage).saveSongToFile(e)}async loadSongFromMemory(e){const t=new AudioSourceStorage,n=await t.loadSongFromMemory(e),s=await t.loadSongHistoryFromMemory(e);this.renderer.loadSongData(n,s),this.render(),console.info("Song loaded from memory: "+e,n)}async loadSongFromFileInput(e){await this.loadSongFromMIDIFileInput(e)}async loadSongFromMIDIFileInput(e){const t=new AudioSourceStorage,n=await t.loadMIDIFile(e);this.renderer.loadSongFromMIDIData(n),this.render(),console.info("Song loaded from midi: "+e,n,this.renderer.songData)}async loadSongFromSrc(e){const t=await new Promise((t,n)=>{const s=new XMLHttpRequest;s.open("GET",e+"",!0),s.responseType="json",s.onload=(()=>{if(200!==s.status)return n("Song file not found: "+url);t(s.response)}),s.send()});this.renderer.loadSongData(t),console.info("Song loaded from src: "+e,this.renderer.songData),this.render()}onInput(e){if(!e.defaultPrevented){switch(this.renderer.getAudioContext(),e.type){case"touchstart":case"mousedown":this.status.mouse.isDown=!0,this.status.mouse.lastDown=e,delete this.status.mouse.lastDrag;break;case"longpress":case"doubleclick":break;case"touchmove":case"mousemove":1===e.which&&this.status.mouse.isDown&&(this.status.mouse.lastDrag=e);break;case"touchend":case"mouseup":this.status.mouse.isDown=!1;const t=this.status.mouse.lastUp;if(t&&t.t.getTime()+this.status.doubleClickTimeout>(new Date).getTime()){e.preventDefault();const n=e.path[0],s=t.path[0];if(s===n||s.contains(n)||n.contains(s)){const s=new CustomEvent("doubleclick",{detail:{firstMouseEvent:t.e,secondMouseEvent:e,clientX:e.clientX,clientY:e.clientY},cancelable:!0,bubbles:!0});n.dispatchEvent(s)}}e.t=new Date,this.status.mouse.lastUp=e;break;case"submit":e.preventDefault(),this.onSubmit(e);break;case"change":case"blur":e.target.form&&e.target.form.classList.contains("submit-on-"+e.type)&&this.onSubmit(e);break;case"dragstart":case"drag":case"dragend":console.info(e.type)}this.tracker.contains(e.target)&&this.tracker.onInput(e)}}onSongEvent(e){switch(console.log("Song Event: ",e.type),this.tracker.onSongEvent(e),e.type){case"song:loaded":this.tracker.renderDuration=this.renderer.getSongTimeDivision();break;case"song:start":this.classList.add("playing");break;case"song:end":case"song:pause":this.classList.remove("playing");break;case"song:modified":clearTimeout(this.saveSongToMemoryTimer),this.saveSongToMemoryTimer=setTimeout(e=>this.saveSongToMemory(e),this.status.autoSaveTimeout);break;case"instrument:loaded":console.info("TODO: load instrument instances",e.detail);break;case"instrument:library":case"instrument:instance":case"instrument:modified":console.log(e.type),this.renderInstruments(),this.renderSongForms()}}onSubmit(e,t){if(t||(t=e.target.form||e.target),!t.matches("form"))throw new Error("Invalid Form: "+t);const n=t.getAttribute("data-action");this.onAction(e,n)}onAction(e,t,n=null){if(console.info("Action: "+t,e.target),this.tracker.onAction(e,t))return!0;switch(t){case"song:new":e.preventDefault(),this.loadNewSongData();break;case"song:load-memory-uuid":e.preventDefault();let s=menuTarget.getAttribute("data-uuid")||null;this.loadSongFromMemory(s);break;case"song:save-to-memory":e.preventDefault(),this.saveSongToMemory();break;case"song:save-to-file":e.preventDefault(),this.saveSongToFile();break;case"song:load-from-file":const o=e.target.querySelector("input[type=file]");this.loadSongFromFileInput(o),console.log(e);break;case"song:edit":this.renderer.replaceDataPath("beatsPerMinute",form["beats-per-minute"].value),this.renderer.replaceDataPath("beatsPerMeasure",form["beats-per-measure"].value);break;case"song:play":this.renderer.isPlaybackActive()?this.renderer.stopAllPlayback():this.renderer.play();break;case"song:pause":this.renderer.stopAllPlayback();break;case"song:resume":this.renderer.play(this.renderer.seekPosition);break;case"song:playback":console.log(e.target);break;case"song:volume":this.renderer.setVolume(this.fieldSongVolume.value);break;case"song:add-instrument":const r=n||e.target.form.elements.instrumentURL.value;e.target.form.elements.instrumentURL.value="",confirm(`Add Instrument to Song?\nURL: ${r}`)?this.renderer.addInstrument(r):console.info("Add instrument canceled");break;case"song:replace-instrument":const i=n||{url:e.target.form.elements.instrumentURL.value,id:parseInt(e.target.form.elements.instrumentID.value)};i.title=i.url.split("/").pop(),confirm(`Change Instrument (${i.id}) to ${i.title}`)?this.status.currentInstrumentID=this.renderer.replaceInstrument(i.id,i.url):console.info("Change instrument canceled");break;case"song:remove-instrument":const a=n||parseInt(e.target.form.elements.instrumentID.value);confirm(`Remove Instrument ID: ${a}`)?this.renderer.removeInstrument(a):console.info("Remove instrument canceled");break;case"song:set-title":this.renderer.setSongTitle(e.target.form.elements.title.value);break;case"song:set-version":this.renderer.setSongVersion(e.target.form.elements.version.value);break;case"toggle:control-song":this.classList.toggle("hide-control-song");break;case"toggle:control-tracker":this.classList.toggle("hide-control-tracker");break;case"view:fullscreen":this.classList.toggle("fullscreen"),console.log(this);break;case"view:forms-song":this.container.classList.toggle("hide-forms-song");break;case"view:forms-tracker":this.container.classList.toggle("hide-forms-tracker");break;case"view:forms-instruments":this.container.classList.toggle("hide-forms-instruments");break;default:console.warn("Unhandled "+e.type+": ",t)}}onError(e){console.error(e),this.webSocket&&this.webSocket.onError(e)}get menuFile(){return this.shadowDOM.querySelector('asc-menu[key="file"]')}get menuEdit(){return this.shadowDOM.querySelector('asc-menu[key="edit"]')}get menuView(){return this.shadowDOM.querySelector('asc-menu[key="view"]')}get menuInstrument(){return this.shadowDOM.querySelector('asc-menu[key="instrument"]')}get menuContext(){return this.shadowDOM.querySelector('asc-menu[key="context"]')}get formsSong(){return this.shadowDOM.querySelector(".form-section-container-song")}get formsTracker(){return this.shadowDOM.querySelector(".form-section-container-tracker")}get formsInstruments(){return this.shadowDOM.querySelector(".form-section-container-instruments")}render(){const e=this.sources.getScriptDirectory("composer/audio-source-composer.css");this.shadowDOM.innerHTML=`\n        <link rel="stylesheet" href="${e}" />\n        <div class="asc-container">\n            <div class="asc-menu-container">\n                <asc-menu key="file" caption="File"></asc-menu>\n                <asc-menu key="edit" caption="Edit"></asc-menu>\n                <asc-menu key="view" caption="View"></asc-menu>\n                <asc-menu key="instrument" caption="Instrument"></asc-menu>\n                <asc-menu key="context" caption=""></asc-menu>\n            </div>\n            <div class="form-section-container form-section-container-song"></div>\n            <div class="form-section-container form-section-container-tracker"></div>\n            <div class="form-section-container form-section-container-instruments"></div>\n            <asc-tracker tabindex="0" group="root"></asc-tracker>\n        </div>\n        `,this.renderMenu(),this.renderSongForms(),this.renderInstruments()}closeAllMenus(){this.shadowDOM.querySelector("asc-menu").closeAllMenus()}get fieldSongVolume(){return this.formsSong.querySelector("form.form-song-volume input[name=volume]")}get fieldSongAddInstrument(){return this.formsSong.querySelector("form.form-song-add-instrument select[name=instrumentURL]")}renderSongForms(){const e=this.formsSong,t=this.renderer,n=this.getSongData();e.innerHTML=`\n\n            <div class="form-section-divide">\n                <span>Song</span>\n            </div>\n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Playback Controls</div>\n                <form action="#" class="form-song-play" data-action="song:play">\n                    <button type="submit" name="play" class="themed">Play</button>\n                </form>\n                <form action="#" class="form-song-pause show-on-song-playing" data-action="song:pause">\n                    <button type="submit" name="pause" class="themed">Pause</button>\n                </form>\n                <form action="#" class="form-song-resume show-on-song-paused" data-action="song:resume">\n                    <button type="submit" name="resume" class="themed">Resume</button>\n                </form>\n            </div>\n                                         \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Volume</div>\n                <form action="#" class="form-song-volume submit-on-change" data-action="song:volume">\n                    <div class="volume-container">\n                        <input name="volume" type="range" min="1" max="100" value="${t?t.getVolume():0}" class="themed">\n                    </div>\n                </form>\n            </div>\n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Load</div>\n                <form name="form-load-file" action="#" class="form-load-file submit-on-change" data-action="song:load-from-file">\n                    <label>\n                        <div class="input-style">File</div>\n                        <input type="file" name="file" accept=".json,.mid,.midi" style="display: none" />\n                    </label>\n                </form>\n            </div>\n                          \n                                         \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Song Name</div>\n                <form action="#" class="form-song-title submit-on-change" data-action="song:set-title">\n                    <input name="name" type="text" class="themed" value="${n.name}" />\n                </form>\n            </div>     \n            \n            <div class="form-section control-song">\n                <div class="form-section-header">Version</div>\n                <form action="#" class="form-song-version submit-on-change" data-action="song:set-version">\n                    <input name="version" type="text" class="themed" value="${n.version}" />\n                </form>\n            </div>                \n             \n            \n            <div style="clear: both;" class="control-song"></div>\n        `}renderInstruments(){const e=this.formsInstruments,t=this.renderer;e.innerHTML='\n            <div class="form-section-divide">\n                <span>Instruments</span>\n            </div>\n';const n=e,s=t.getInstrumentList();for(let e=0;e<s.length;e++){let s=document.createElement("div");s.setAttribute("data-id",e+""),s.classList.add("instrument-container"),s.classList.add("control-instrument"),n.appendChild(s);let o=t.getInstrument(e,!1);const r=t.getInstrumentConfig(e,!1);if(s.innerHTML="",r)if(r.url)if(t.isInstrumentLoaded(e))try{if(o instanceof HTMLElement)o.setAttribute("data-id",e+""),s.appendChild(o);else{if(!o.render)throw new Error("No Renderer");{const t=o.render(this,e);t&&(s.innerHTML=t)}}}catch(e){s.innerHTML=e}else s.innerHTML="Loading...";else s.innerHTML="Invalid URL";else o=new EmptyInstrumentElement(e),s.appendChild(o)}e.appendChild(new EmptyInstrumentElement)}renderMenu(){this.menuFile.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("new","New song").action=(e=>this.onAction(e,"song:new"));const n=t.getOrCreateSubMenu("open","Open song ►");n.populate=(e=>{n.getOrCreateSubMenu("from Memory ►").populate=(async e=>{const t=e.menuElement,n=new AudioSourceStorage,s=await n.getRecentSongList();for(let e=0;e<s.length;e++){const n=s[e];t.getOrCreateSubMenu(n.guid,n.title).action=(e=>{this.loadSongFromMemory(n.guid)})}}),n.getOrCreateSubMenu("from File").disabled=!0,n.getOrCreateSubMenu("from URL").disabled=!0});const s=t.getOrCreateSubMenu("save","Save song ►");s.populate=(e=>{s.getOrCreateSubMenu("to Memory").action=(e=>this.onAction(e,"song:save-to-memory")),s.getOrCreateSubMenu("to File").action=(e=>this.onAction(e,"song:save-to-file"))});const o=t.getOrCreateSubMenu("import","Import song ►");o.populate=(e=>{o.getOrCreateSubMenu("from MIDI File").disabled=!0});const r=t.getOrCreateSubMenu("export","Export song ►");r.disabled=!0,r.populate=(e=>{r.getOrCreateSubMenu("to MIDI File").disabled=!0})}),this.menuView.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("fullscreen",`${this.classList.contains("fullscreen")?"Disable":"Enable"} Fullscreen`).action=(e=>this.onAction(e,"view:fullscreen")),t.getOrCreateSubMenu("forms-song",`${this.container.classList.contains("hide-forms-song")?"Show":"Hide"} Song Forms `).action=(e=>this.onAction(e,"view:forms-song")),t.getOrCreateSubMenu("forms-tracker",`${this.container.classList.contains("hide-forms-tracker")?"Show":"Hide"} Track Forms`).action=(e=>this.onAction(e,"view:forms-tracker")),t.getOrCreateSubMenu("forms-instruments",`${this.container.classList.contains("hide-forms-instruments")?"Show":"Hide"} Instrument Forms`).action=(e=>this.onAction(e,"view:forms-instruments"))}),this.menuInstrument.populate=(e=>{const t=e.menuElement;t.getOrCreateSubMenu("instrument","Add To Song ►").populate=(e=>{const t=e.menuElement;this.values.getValues("instruments-available",(e,n)=>{const s=t.getOrCreateSubMenu(e,`${n}`);s.setAttribute("data-instrument",e),s.action=(t=>{this.fieldSongAddInstrument.value=e,this.onAction(t,"song:add-instrument",e)})})});let n=0;this.values.getValues("song-instruments",(e,s)=>{const o=this.renderer.isInstrumentLoaded(e),r=t.getOrCreateSubMenu(e,`${s} ►`);r.populate=(t=>{const n=t.menuElement;n.getOrCreateSubMenu("change","Replace ►").populate=(t=>{const n=t.menuElement;this.values.getValues("instruments-available",(t,s)=>{const o=n.getOrCreateSubMenu(t,`${s}`);o.setAttribute("data-instrument",t),o.action=(n=>{this.fieldSongAddInstrument.value=t,this.onAction(n,"song:replace-instrument",{id:e,url:t})})})});const s=n.getOrCreateSubMenu("remove","Remove From Song");s.action=(t=>{this.onAction(t,"song:remove-instrument",e)}),s.disabled=!o}),0===n&&(r.hasBreak=!0),n++})})}update(){this.menu.update(),this.tracker.update()}selectGroup(e){this.status.groupHistory=this.status.groupHistory.filter(e=>e===this.status.currentGroup),this.status.groupHistory.unshift(this.status.currentGroup),this.status.currentGroup=e,console.log("Group Change: ",e,this.status.groupHistory),this.tracker.groupName=e,this.render()}selectInstructions(e=null){if(this.status.selectedIndicies=[],"number"==typeof e)this.status.selectedIndicies=[e];else{if(!Array.isArray(e)){if("function"==typeof e){let t=[];return this.renderer.eachInstruction(this.status.currentGroup,(n,s,o)=>{e(n,s,o)&&t.push(n)}),void this.selectedIndicies(t)}throw console.error("Invalid indicies",e)}this.status.selectedIndicies=e}this.update()}playSelectedInstructions(){this.renderer.stopAllPlayback();const e=this.status.selectedIndicies;for(let t=0;t<e.length;t++)this.renderer.playInstructionAtIndex(this.status.currentGroup,e[t])}loadCSS(){const e=this.shadowDOM||document.head;if(e.querySelector('link[href$="audio-source-composer.css"]'))return;const t=this.sources.getScriptDirectory("composer/audio-source-composer.css");let n=document.createElement("link");n.setAttribute("rel","stylesheet"),n.setAttribute("type","text/css"),n.setAttribute("href",t),e.appendChild(n)}}customElements.define("audio-source-composer",AudioSourceComposerElement);class EmptyInstrumentElement extends HTMLElement{constructor(e=null){super(),null!==e&&this.setAttribute("data-id",e+"")}connectedCallback(){this.render()}get editor(){const e=this.closest("div.asc-container").parentNode.host;if(!e)throw new Error("Editor not found");return e}render(){let e="Add",t="song:add-instrument",n="",s="";this.hasAttribute("data-id")&&(e="Change",t="song:replace-instrument",s=((n=this.getAttribute("data-id")||"0")<10?"0":"")+n+":"),this.innerHTML=`\n            <div class="form-section control-song">\n                <form class="form-song-add-instrument submit-on-change" data-action="${t}">\n                    <input type="hidden" name="instrumentID" value="${n}"/>\n                    ${s}\x3c!--\n                    --\x3e<select name="instrumentURL" class="themed">\n                        <option value="">${e} Instrument</option>\n                        ${this.editor.values.renderEditorFormOptions("instruments-available")}\n                    </select>\n                </form>\n            </div>\n\n        `}}customElements.define("asc-instrument-empty",EmptyInstrumentElement);class AudioSourceComposerTracker extends HTMLElement{constructor(){super(),this.editor=null,this.renderTimeout=null,this.renderScrollLimit=1200,this.renderMinimumRows=16}get groupName(){return this.getAttribute("group")}set groupName(e){this.setAttribute("group",e),this.render(1)}get rowLengthInTicks(){return parseInt(this.getAttribute("rowLength"))}set rowLengthInTicks(e){this.setAttribute("rowLength",e),this.render(1)}get status(){return this.editor.status.grid}get selectedCells(){return this.querySelectorAll("asct-instruction.selected")}get cursorCell(){return this.querySelector("asct-instruction.cursor,asct-instruction-add.cursor")}get cursorRow(){return this.cursorCell.parentNode}get cursorPosition(){return(e=>e?e.parentNode.position:null)(this.cursorCell)}get cursorInstruction(){return this.getInstruction(this.cursorCell.index)}get selectedIndicies(){return[].map.call(this.selectedCells,e=>e.index)}get isConnected(){return this.editor.container.contains(this)}connectedCallback(){this.addEventListener("scroll",this.onInput,!0),this.editor=this.getRootNode().host,this.getAttribute("rowLength")||this.setAttribute("rowLength",this.editor.renderer.getSongTimeDivision()),setTimeout(e=>this.render(),20),setTimeout(e=>this.renderAllRows(),1e3)}clearSelection(e=[]){Array.isArray(e)||(e=[e]),this.querySelectorAll("asct-row.selected").forEach(t=>-1!==e.indexOf(t)?null:t.select(!1)),this.querySelectorAll("asct-instruction.selected").forEach(t=>-1!==e.indexOf(t)?null:t.select(!1))}playSelectedInstructions(){this.editor.renderer.stopAllPlayback();const e=this.selectedIndicies;for(let t=0;t<e.length;t++)this.editor.renderer.playInstructionAtIndex(this.groupName,e[t])}getInstructions(e=null){return this.editor.renderer.getInstructions(this.groupName,e)}getInstructionRange(e,t=null){return this.editor.renderer.getInstructionRange(this.groupName,e,t)}getInstruction(e){return this.editor.renderer.getInstruction(this.groupName,e)}getInstructionFormValues(e=null){e||(e=this.fieldInstructionCommand.value);let t=new SongInstruction;(this.fieldInstructionInstrument.value||0===this.fieldInstructionInstrument.value)&&(t.instrument=parseInt(this.fieldInstructionInstrument.value)),this.fieldInstructionDuration.value&&(t.duration=parseFloat(this.fieldInstructionDuration.value));const r=parseInt(this.fieldInstructionVelocity.value);return r&&100!==r&&(t.velocity=r),e=this.replaceFrequencyAlias(e,t.instrument),t.command=e,t}render(e=0){this.innerHTML="",this.renderMenu(),this.renderForms(),this.update(),this.renderAllRows(e)}renderAllRows(e=0){const t=()=>{if(!this.isConnected)return void console.warn("Tracker not connected. Skipping render",this);console.time("tracker.renderAllRows()");const e=this.querySelectorAll("asct-row");let t=0;const r=this.scrollTop;this.renderScrollLimit<this.scrollTop+4*this.offsetHeight&&(this.renderScrollLimit*=2);const n=()=>{let r=e[t];return r||(r=document.createElement("asct-row"),this.appendChild(r)),t++,r},s=this.editor.renderer.getGroupTimeDivision(this.groupName),i=this.rowLengthInTicks;let o=0;const c=(e,t,r,c)=>{let l=r-t,a=n();for(a.index=e,a.render(e,l,c),a.classList.remove("break");o<r;)o!==l&&((a=n()).index=e,a.render(e,o)),(o+=i)%s==0&&(a.classList.add("beat-end"),o/4%s==0&&a.classList.add("measure-end"));return a};let l=[],a=0,u=0;for(this.editor.renderer.eachInstruction(this.groupName,(e,t,r)=>{if(0!==t.deltaDuration){const n=c(a,t.deltaDuration,r.groupPositionInTicks,l);if(a=e,u=r.groupPositionInTicks,l=[],n.offsetTop>this.renderScrollLimit)return!1}l.push(t)}),l.length>0&&(u+=this.rowLengthInTicks,c(a,this.rowLengthInTicks,u,l));this.renderMinimumRows>t;)u+=this.rowLengthInTicks,c(a,this.rowLengthInTicks,u);this.scrollTop=r,console.timeEnd("tracker.renderAllRows()")};e>0?(clearTimeout(this.renderTimeout),this.renderTimeout=setTimeout(e=>{t()},e)):t()}renderMenu(){const e=this.editor,t=t=>r=>{e.tracker.onAction(r,t)},r=this.editor.menuEdit,n=this.editor.menuContext;r.populate=n.populate=(r=>{const n=r.menuElement,s=this.selectedIndicies,i=n.getOrCreateSubMenu("insert","Insert Command ►");i.populate=(r=>{const n=r.menuElement;n.getOrCreateSubMenu("frequency","Frequency ►").populate=(r=>{const n=r.menuElement;e.values.getValues("note-frequency-octaves",(r,s)=>{n.getOrCreateSubMenu(r,`Octave ${s} ►`).populate=(n=>{const s=n.menuElement;e.values.getValues("note-frequencies",(n,i)=>{const o=n+r;s.getOrCreateSubMenu(o,`${i}${r}`).action=(r=>{e.tracker.fieldInstructionCommand.value=o,t("instruction:insert")(r)})})})})}),n.getOrCreateSubMenu("named","Named ►").disabled=!0,n.getOrCreateSubMenu("group","Group ►").disabled=!0;const s=n.getOrCreateSubMenu("custom","Custom Command");s.action=t("instruction:custom-insert"),s.hasBreak=!0}),i.disabled=!this.cursorCell;const o=n.getOrCreateSubMenu("set-command","Set Command ►");o.populate=(r=>{const n=r.menuElement;n.getOrCreateSubMenu("frequency","Frequency ►").populate=(r=>{const n=r.menuElement;e.values.getValues("note-frequency-octaves",(r,s)=>{n.getOrCreateSubMenu(r,`Octave ${s} ►`).populate=(n=>{const s=n.menuElement;e.values.getValues("note-frequencies",(n,i)=>{const o=n+r;s.getOrCreateSubMenu(o,`${i}${r}`).action=(r=>{e.tracker.fieldInstructionCommand.value=o,t("instruction:command")(r)})})})})}),n.getOrCreateSubMenu("named","Named ►").disabled=!0,n.getOrCreateSubMenu("group","Group ►").disabled=!0;const s=n.getOrCreateSubMenu("custom","Custom Command");s.action=t("instruction:custom-command"),s.hasBreak=!0}),o.disabled=0===s.length;const c=n.getOrCreateSubMenu("set-instrument","Set Instrument ►");c.populate=(r=>{const n=r.menuElement;e.values.getValues("song-instruments",(r,s)=>{n.getOrCreateSubMenu(r,`${s}`).action=(n=>{e.tracker.fieldInstructionInstrument.value=r,t("instruction:instrument")(n)})})}),c.disabled=0===s.length;const l=n.getOrCreateSubMenu("set-duration","Set Duration ►");l.populate=(r=>{const n=r.menuElement;e.values.getValues("durations",(r,s)=>{n.getOrCreateSubMenu(r,`${s}`).action=(n=>{e.tracker.fieldInstructionDuration.value=r,t("instruction:duration")(n)})});const s=n.getOrCreateSubMenu("custom","Custom Duration");s.action=t("instruction:custom-duration"),s.hasBreak=!0}),l.disabled=0===s.length;const a=n.getOrCreateSubMenu("set-velocity","Set Velocity ►");a.populate=(r=>{const n=r.menuElement;e.values.getValues("velocities",(r,s)=>{n.getOrCreateSubMenu(r,`${s}`).action=(n=>{e.tracker.fieldInstructionVelocity.value=r,t("instruction:velocity")(n)})});const s=n.getOrCreateSubMenu("custom","Custom Velocity");s.action=t("instruction:custom-velocity"),s.hasBreak=!0}),a.disabled=0===s.length;const u=n.getOrCreateSubMenu("delete","Delete Instruction(s)");u.action=t("instruction:delete"),u.disabled=0===s.length;const d=n.getOrCreateSubMenu("row","Row ►");d.hasBreak=!0,d.disabled=!0;const h=n.getOrCreateSubMenu("group","Group ►");h.hasBreak=!0,h.disabled=!0})}update(){let e=this.selectedIndicies;let t=this.editor.renderer.getInstructions(this.groupName,e)[0];e.length>0?this.fieldInstructionDelete.removeAttribute("disabled"):this.fieldInstructionDelete.setAttribute("disabled","disabled"),t?(this.fieldInstructionCommand.value=t.command,this.fieldInstructionInstrument.value=null!==t.instrument?t.instrument:"",this.fieldInstructionVelocity.value=null!==t.velocity?t.velocity:"",this.fieldInstructionDuration.value=null!==t.duration?t.duration:""):e.length,this.fieldInstructionCommand.querySelectorAll(".instrument-frequencies option").forEach(e=>e.classList.toggle("hidden",this.fieldInstructionInstrument.value!==e.getAttribute("data-instrument"))),this.fieldInstructionCommand.querySelectorAll(".instrument-frequencies option").forEach(e=>e.classList.toggle("hidden",this.fieldInstructionInstrument.value!==e.getAttribute("data-instrument"))),this.querySelectorAll(".multiple-count-text").forEach(t=>t.innerHTML=e.length>1?"(s)":""),this.fieldRenderOctave.value=this.editor.status.currentOctave,this.fieldRenderRowLength.value=this.rowLengthInTicks,!this.fieldInstructionDuration.value&&this.fieldRenderRowLength.value&&(this.fieldInstructionDuration.value=this.fieldRenderRowLength.value),this.fieldSelectedIndicies.value=e.join(",")}onInput(e){if(e.defaultPrevented)return;if(e.target instanceof Node&&!this.contains(e.target))return;const t=this.editor.status.mouse;let r=this.selectedIndicies;switch(e.type){case"midimessage":switch(e.data[0]){case 144:e.preventDefault();let t=this.editor.renderer.getCommandFromMIDINote(e.data[1]),n=Math.round(e.data[2]/128*100);if(console.log("MIDI ",t,n),this.cursorCell.matches(".new")){let s=this.getInstructionFormValues();t=this.replaceFrequencyAlias(t,s.instrument),s.command=t,s.velocity=n;const i=this.cursorPosition,o=this.insertInstructionAtPosition(i,s);this.renderAllRows(),this.selectIndicies(e,o),r=[o]}else for(let e=0;e<r.length;e++){const s=this.getInstruction(r[e]),i=this.replaceFrequencyAlias(t,s.instrument);this.replaceInstructionCommand(r[e],i),this.replaceInstructionVelocity(r[e],n)}this.playSelectedInstructions(e)}break;case"keydown":let n=e.key;switch(!e.ctrlKey&&this.editor.keyboard.getKeyboardCommand(e.key)&&(n="PlayFrequency"),"Enter"===n&&e.altKey&&(n="ContextMenu"),n){case"Delete":e.preventDefault();for(let e=0;e<r.length;e++)this.editor.renderer.deleteInstructionAtIndex(this.groupName,r[e]);this.renderAllRows(),this.selectIndicies(e,r[0]);break;case"Escape":case"Backspace":e.preventDefault(),this.navigatePop(),this.selectIndicies(e,0);break;case"Enter":if(e.preventDefault(),this.cursorCell.matches(".new")){let t=this.getInstructionFormValues();if(!t)return console.info("Insert canceled");let r=this.insertInstructionAtPosition(this.cursorPosition,t);this.renderAllRows(),this.selectIndicies(e,r)}let t=this.cursorInstruction;if(t.isGroupCommand()){const e=t.command.substr(1);this.editor.selectGroup(e)}else this.playSelectedInstructions(e);break;case"Play":e.preventDefault(),this.playSelectedInstructions(e);break;case"ArrowRight":e.preventDefault(),this.selectNextCell(e),this.playSelectedInstructions(e);break;case"ArrowLeft":e.preventDefault(),this.selectPreviousCell(e),this.playSelectedInstructions(e);break;case"ArrowDown":e.preventDefault(),this.selectNextRowCell(e),this.playSelectedInstructions(e);break;case"ArrowUp":e.preventDefault(),this.selectPreviousRowCell(e),this.playSelectedInstructions(e);break;case" ":e.preventDefault(),this.editor.renderer.isPlaybackActive()?this.editor.renderer.stopAllPlayback():this.editor.renderer.playInstructions(this.groupName);break;case"PlayFrequency":let s=this.editor.keyboard.getKeyboardCommand(e.key);if(null===s)break;if(e.preventDefault(),this.cursorCell.matches("asct-instruction-add")){let t=this.getInstructionFormValues(s);if(!t)return this.fieldInstructionCommand.focus(),console.info("Insert canceled");const n=this.cursorPosition,i=this.insertInstructionAtPosition(n,t);this.renderAllRows(),this.selectIndicies(e,i),r=[i]}else{for(let e=0;e<r.length;e++){const t=this.getInstruction(r[e]),n=this.replaceFrequencyAlias(s,t.instrument);this.replaceInstructionCommand(r[e],n)}this.renderAllRows(),this.selectIndicies(e,r)}this.playSelectedInstructions(e)}break;case"mousedown":if(e.target.matches("asct-instruction,asct-instruction-add"))return this.onCellInput(e);if(e.target.matches("asct-instruction > *"))return this.onCellInput(e,e.target.instruction);if(e.target.matches("asct-row"))return this.onRowInput(e);break;case"touchmove":case"mousemove":t.isDown&&t.lastDrag&&t.lastDown.path[0].matches("asct-row")&&this.updateSelectionRect(t.lastDown,t.lastDrag);break;case"touchend":case"mouseup":t.lastDown.path[0].matches("asct-row")&&this.commitSelectionRect(t.lastDown,t.lastUp);break;case"click":break;case"doubleclick":case"longpress":e.preventDefault(),this.contains(e.target)&&this.editor.menuContext.openContextMenu(e);break;case"contextmenu":this.contains(e.target)&&(e.altKey||(e.preventDefault(),this.editor.menuContext.openContextMenu(e)));break;case"scroll":this.renderAllRows(40);break;default:throw new Error("Unhandled type: "+e.type)}}updateSelectionRect(e,t){let r=this.querySelector("div.selection-rect");r||((r=document.createElement("div")).classList.add("selection-rect"),this.appendChild(r)),e.clientX<t.clientX?(r.style.left=e.clientX+"px",r.style.width=t.clientX-e.clientX+"px"):(r.style.left=t.clientX+"px",r.style.width=e.clientX-t.clientX+"px"),e.clientY<t.clientY?(r.style.top=e.clientY+"px",r.style.height=t.clientY-e.clientY+"px"):(r.style.top=t.clientY+"px",r.style.height=e.clientY-t.clientY+"px");var n=e.clientX-t.clientX,s=e.clientY-t.clientY;Math.sqrt(n*n+s*s)}commitSelectionRect(e,t){let r=this.querySelector("div.selection-rect");if(!r)return console.warn("No selection rect");r.parentNode.removeChild(r);var n=e.clientX-t.clientX,s=e.clientY-t.clientY,i=Math.sqrt(n*n+s*s);console.log("Drag Stop",i,e.path[0],t.path[0])}get formsTracker(){return this.editor.formsTracker}get fieldRenderRowLength(){return this.formsTracker.querySelector("form.form-render-row-length select[name=rowLengthInTicks]")}get fieldRenderInstrument(){return this.formsTracker.querySelector("form.form-render-instrument select[name=instrument]")}get fieldRenderOctave(){return this.formsTracker.querySelector("form.form-render-octave select[name=octave]")}get fieldInstructionInstrument(){return this.formsTracker.querySelector("form.form-instruction-instrument select[name=instrument]")}get fieldInstructionDuration(){return this.formsTracker.querySelector("form.form-instruction-duration select[name=duration]")}get fieldInstructionCommand(){return this.formsTracker.querySelector("form.form-instruction-command select[name=command]")}get fieldInstructionVelocity(){return this.formsTracker.querySelector("form.form-instruction-velocity input[name=velocity]")}get fieldInstructionInsert(){return this.formsTracker.querySelector("form.form-instruction-insert button[name=insert]")}get fieldInstructionDelete(){return this.formsTracker.querySelector("form.form-instruction-delete button[name=delete]")}get fieldSelectedIndicies(){return this.formsTracker.querySelector("form.form-selected-indicies input[name=indicies]")}renderForms(){this.editor.formsTracker.innerHTML=`\n            <div class="form-section-divide">\n                <span>Track</span>\n            </div>\n \n            <div class="form-section control-tracker">\n                <div class="form-section-header">Instruction</div>\n                <form action="#" class="form-instruction-command submit-on-change" data-action="instruction:command">\n                    <select name="command" title="Instruction Command" class="themed" required="required">\n                        <option value="">Command (Choose)</option>\n                        <optgroup label="Custom Frequencies" class="instrument-frequencies">\n                            ${this.editor.values.renderEditorFormOptions("command-instrument-frequencies")}\n                        </optgroup>\n                        <optgroup label="Frequencies">\n                            ${this.editor.values.renderEditorFormOptions("note-frequencies-all")}\n                        </optgroup>\n                        <optgroup label="Group Execute">\n                            ${this.editor.values.renderEditorFormOptions("command-group-execute")}\n                        </optgroup>\n                    </select>\n                </form>\n                <form action="#" class="form-instruction-insert" data-action="instruction:insert">\n                    <button name="insert" class="themed" title="Insert Instruction">+</button>\n                </form>\n                <form action="#" class="form-instruction-delete submit-on-change" data-action="instruction:delete">\n                    <button name="delete" class="themed" title="Delete Instruction" disabled>X</button>\n                </form>\n            </div>\n            \n            <form action="#" class="form-instruction-instrument submit-on-change" data-action="instruction:instrument">\n            <div class="form-section-header">Instrument</div>\n                <select name="instrument" title="Instruction Instrument" class="themed">\n                    <option value="">None</option>\n                    <optgroup label="Song Instruments">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-instruction-velocity submit-on-change" data-action="instruction:velocity">\n            <div class="form-section-header">Velocity</div>\n                <input type="range" name="velocity" min="1" max="100" class="themed" />\n            </form>\n            \n            \n            <form action="#" class="form-instruction-duration submit-on-change" data-action="instruction:duration">\n                <div class="form-section-header">Duration</div>\n                <select name="duration" title="Instruction Duration" class="themed">\n                    <option value="">No Duration</option>\n                    <optgroup label="Note Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n             \n            \n                \n            <form action="#" class="form-render-octave submit-on-change" data-action="status:octave">\n                <div class="form-section-header">Octave</div>\n                <select name="octave" class="themed">\n                    <optgroup label="Select Octave">\n                        ${this.editor.values.renderEditorFormOptions("note-frequency-octaves")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <div class="form-section control-tracker">\n                <div class="form-section-header">Render Group</div>\n                ${this.editor.values.getValues("groups",(e,t)=>`<form action="#" class="form-group" data-action="group:change" data-group="${e}">`+`<button name="groupName" class="themed" >${t}</button>`+"</form>")}\n                \n                <form action="#" class="form-group" data-action="group:new">\n                    <button name="groupName" class="new themed" title="Create new group">+</button>\n                </form>\n                \n            </div>\n            \n            <form action="#" class="form-render-row-length submit-on-change" data-action="tracker:quantization">\n                <div class="form-section-header">Row Length</div>\n                <select name="rowLengthInTicks" title="Row Length" class="themed">\n                    <option value="">Default</option>\n                    <optgroup label="Render Duration">\n                        ${this.editor.values.renderEditorFormOptions("durations")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form action="#" class="form-render-instrument submit-on-change" data-action="tracker:instrument">\n                <div class="form-section-header">Filter By Instrument</div>                    \n                <select name="instrument" class="themed"->\n                    <option value="">Show All (Default)</option>\n                    <optgroup label="Filter By">\n                        ${this.editor.values.renderEditorFormOptions("song-instruments")}\n                    </optgroup>\n                </select>\n            </form>\n            \n            <form class="form-selected-indicies submit-on-change" data-action="tracker:selected">\n                <div class="form-section-header">Selected Indicies</div>                    \n                <input name="indicies" placeholder="No indicies selection" />\n            </form>\n        `}onAction(e,t,r=null){const n=this.selectedIndicies;switch(t){case"instruction:custom-insert":case"instruction:insert":let s=this.fieldInstructionCommand.value||null;if(null!==s&&"instruction:custom-insert"!==t||(s=prompt("Set custom command:",this.fieldInstructionCommand.value)),!s)throw new Error("Insert new instruction canceled");let i=this.getInstructionFormValues(s);if(!i)return this.fieldInstructionCommand.focus(),console.info("Insert canceled");const o=this.cursorPosition;if(null===o)throw new Error("No cursor position");const c=this.editor.renderer.insertInstructionAtPosition(this.groupName,o,i);this.renderAllRows(),this.selectIndicies(e,c),this.editor.renderer.playInstruction(i);break;case"instruction:custom-command":case"instruction:command":if(0===n.length)throw new Error("No selection");let l=this.fieldInstructionCommand.value;if(null!==l&&"instruction:custom-command"!==t||(l=prompt("Set custom command:",this.fieldInstructionCommand.value)),!l)throw new Error("Set command canceled");let a=null;this.fieldInstructionCommand.selectedOptions[0]&&this.fieldInstructionCommand.selectedOptions[0].hasAttribute("data-instrument")&&(a=parseInt(this.fieldInstructionCommand.selectedOptions[0].getAttribute("data-instrument")));for(let e=0;e<n.length;e++)this.editor.renderer.replaceInstructionCommand(this.groupName,n[e],l),null!==a&&this.editor.renderer.replaceInstructionInstrument(this.groupName,n[e],a),this.findInstructionElement(n[e]).render();this.playSelectedInstructions(),this.renderAllRows();break;case"instruction:instrument":let u=""===this.fieldInstructionInstrument.value?null:parseInt(this.fieldInstructionInstrument.value);for(let e=0;e<n.length;e++)this.editor.renderer.replaceInstructionInstrument(this.groupName,n[e],u),this.findInstructionElement(n[e]).render();this.editor.status.currentInstrumentID=u,this.playSelectedInstructions(),this.renderAllRows(),this.fieldInstructionInstrument.focus();break;case"instruction:duration":case"instruction:custom-duration":let d=parseFloat(this.fieldInstructionDuration.value);if(null!==d&&"instruction:custom-duration"!==t||(d=parseInt(prompt("Set custom duration in ticks:",this.fieldInstructionDuration.value))),isNaN(d))throw new Error("Set duration canceled");for(let e=0;e<n.length;e++)this.editor.renderer.replaceInstructionDuration(this.groupName,n[e],d),this.findInstructionElement(n[e]).render();this.playSelectedInstructions(),this.renderAllRows();break;case"instruction:velocity":case"instruction:custom-velocity":let h="0"===this.fieldInstructionVelocity.value?0:parseInt(this.fieldInstructionVelocity.value)||null;if(null!==h&&"instruction:custom-velocity"!==t||(h=parseInt(prompt("Set custom velocity (0-127):",this.fieldInstructionVelocity.value))),isNaN(h))throw new Error("Set velocity canceled");for(let e=0;e<n.length;e++)this.editor.renderer.replaceInstructionVelocity(this.groupName,n[e],h),this.findInstructionElement(n[e]).render();this.playSelectedInstructions(),this.renderAllRows();break;case"instruction:delete":for(let e=0;e<n.length;e++)this.editor.renderer.deleteInstructionAtIndex(this.groupName,n[e]);this.renderAllRows(),this.selectIndicies(e,n[0]);break;case"group:change":const m=e.target.form||e.target,p=r||m.getAttribute("data-group");this.groupName=p;break;case"group:new":let f=this.editor.renderer.generateInstructionGroupName(this.groupName);(f=prompt("Create new instruction group?",f))?this.editor.renderer.addInstructionGroup(f,[]):console.error("Create instruction group canceled"),this.editor.render();break;case"tracker:octave":this.editor.status.currentOctave=parseInt(this.fieldRenderOctave.value);break;case"tracker:quantization":this.rowLengthInTicks=this.fieldRenderRowLength.value,this.render(1);break;case"tracker:instrument":this.render();break;default:return!1}return!0}onRowInput(e){e.preventDefault();let t=e.target;t.select(),this.update(),this.focus(),this.playSelectedInstructions(e),e.shiftKey||this.clearSelection([t])}onCellInput(e,t){e.preventDefault(),t=t||e.target,this.editor.closeAllMenus(),t.select(),t.setCursor(),t.play(),this.focus(),e.shiftKey||this.clearSelection([t,t.row])}onSongEvent(e){const t=e.detail||{stats:{}};let r,n;switch(e.type){case"note:play":r=this.findRowElement(t.stats.groupPositionInTicks),n=this.findInstructionElement(t.stats.currentIndex);const s=t.currentTime;setTimeout(()=>{n&&n.classList.add("playing"),r&&(r.classList.add("playing"),r.scrollTo())},1e3*(t.startTime-s)),t.duration&&setTimeout(()=>{n&&n.classList.remove("playing"),r&&r.classList.remove("playing")},1e3*(t.startTime-s+t.duration))}}selectNextCell(e,t=!0){const r=this.cursorCell||this.querySelector("asct-instruction");let n;if(r.nextElementSibling&&r.nextElementSibling.matches("asct-instruction,asct-instruction-add"))n=r.nextElementSibling;else{if("asct-instruction-add"!==r.nodeName.toLowerCase())throw new Error("Shouldn't happen");n=r.parentNode.nextElementSibling.firstElementChild}n.select(t).setCursor()}selectNextRowCell(e,t=!0,r=null,n=!0){const s=this.cursorCell||this.querySelector("asct-instruction"),i=s.parentNode;if(null===r&&(r=[].indexOf.call(s.parentNode.children,s)),!i.nextElementSibling){if(!n)throw new Error("New row was not created");return this.increaseTrackerSize(e)}const o=i.nextElementSibling;let c=o.firstElementChild;(c=o.children[r]&&o.children[r].matches("asct-instruction,asct-instruction-add")?o.children[r]:o.createAddInstructionElement()).select(t).setCursor()}selectPreviousCell(e,t=!0){const r=this.cursorCell||this.querySelector("asct-instruction");if(r.previousElementSibling&&r.previousElementSibling.matches("asct-instruction"))return r.previousElementSibling.select(t).setCursor();this.selectPreviousRowCell(e,!0,-1)}selectPreviousRowCell(e,t=!0,r=null){const n=this.cursorCell||this.querySelector("asct-instruction"),s=n.parentNode;r=null===r?[].indexOf.call(s.children,n):r;let i,o=s.previousElementSibling;o||(o=s.parentNode.lastElementChild),(i=o.children[r]&&o.children[r].matches("asct-instruction")?o.children[r]:o.createAddInstructionElement()).select(t).setCursor()}selectIndicies(e,t){Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;e++){const r=this.findInstructionElement(t[e]);if(!r)throw new Error("Instruction not found: "+t[e]);r.select(),0===e&&r.setCursor()}}navigatePop(){console.log("Navigate Back: ",this.status.trackers[0].groupName),this.status.trackers.length>0&&this.status.trackers.shift(),this.render()}increaseTrackerSize(e,t=!0){if(this.renderMinimumRows+=1,this.renderAllRows(),t){this.querySelector("asc-tracker > asct-row:last-child").setCursor()}}insertInstructionAtIndex(e,t){return this.editor.renderer.insertInstructionAtIndex(this.groupName,t,e)}insertInstructionAtPosition(e,t){return this.editor.renderer.insertInstructionAtPosition(this.groupName,e,t)}deleteInstructionAtIndex(e){return this.editor.renderer.deleteInstructionAtIndex(this.groupName,e,1)}replaceInstructionCommand(e,t){return this.editor.renderer.replaceInstructionCommand(this.groupName,e,t)}replaceInstructionVelocity(e,t){return this.editor.renderer.replaceInstructionVelocity(this.groupName,e,t)}replaceFrequencyAlias(e,t){const r=this.editor.renderer.getInstrument(t,!1);if(!r||!r.getFrequencyAliases)return e;const n=r.getFrequencyAliases(e);return void 0===n[e]?e:n[e]}scrollToCursor(e){this.scrollTop<e.parentNode.offsetTop-this.offsetHeight&&(this.scrollTop=e.parentNode.offsetTop),this.scrollTop>e.parentNode.offsetTop&&(this.scrollTop=e.parentNode.offsetTop-this.offsetHeight)}findInstructionElement(e){return this.querySelector(`asct-instruction[i='${e}']`)}findRowElement(e){return this.querySelector(`asct-row[p='${e}']`)}getInstructionHTML(e,t){return`<div class="instruction" data-index="${e}">\n                    <div class="command">${t.command}</div>\n                    ${null!==t.instrument?`<div class="instrument">${this.editor.values.format(t.instrument,"instrument")}</div>`:""}\n                    ${null!==t.velocity?`<div class="velocity">${this.editor.values.format(t.velocity,"velocity")}</div>`:""}\n                    ${null!==t.duration?`<div class="duration">${this.editor.values.format(t.duration,"duration")}</div>`:""}\n                </div>`}getRowHTML(e,t,r,n){const s=[];let i=n;for(let e=0;e<r.length;e++)s.push(this.getInstructionHTML(i++,r[e]));return`<div data-position="${e}">\n                   ${s.join("")}\n                   <div class="delta">${this.editor.values.format(t,"duration")}</div>\n                </div>`}}customElements.define("asc-tracker",AudioSourceComposerTracker);const VISIBLE_BUFFER=100;class AudioSourceComposerTrackerRow extends HTMLElement{constructor(){super()}get tracker(){return this.closest("asc-tracker")}get selected(){return this.classList.contains("selected")}set position(e){this.setAttribute("p",e)}get position(){return parseInt(this.getAttribute("p"))}get duration(){return this.nextElementSibling?this.nextElementSibling.position-this.position:"N/A"}set index(e){this.setAttribute("i",e)}get index(){return parseInt(this.getAttribute("i"))}get visible(){const e=this.parentNode.scrollTop+this.parentNode.offsetHeight,t=this.offsetTop+this.offsetHeight;return!(this.offsetTop-e>VISIBLE_BUFFER)&&!(t<this.parentNode.scrollTop-VISIBLE_BUFFER)}connectedCallback(){}getDeltaElement(){let e=this.querySelector("asct-delta");return e||(e=document.createElement("asct-delta"),this.appendChild(e),e)}createAddInstructionElement(){let e=this.querySelector("asct-instruction-add");if(!e){const t=document.createElement("asct-instruction-add");e=t,t.index=this.index,t.innerHTML="+"}const t=this.getDeltaElement();return this.insertBefore(e,t),e}clearAddInstructionElement(){let e=this.querySelector("asct-instruction-add");e&&e.parentNode.removeChild(e)}setCursor(){}select(e=!0){if(e){if(this.selected)return void console.info("Already selected ",this);this.classList.add("selected"),this.createAddInstructionElement().setCursor()}else{if(!this.selected)return void console.info("Already unselected ",this);this.classList.remove("selected"),this.clearAddInstructionElement()}}updateDelta(){let e=this.getDeltaElement();this.appendChild(e),e.render(this.duration)}scrollTo(){const e=this.tracker;e.scrollTop<this.offsetTop-e.offsetHeight&&(e.scrollTop=this.offsetTop),e.scrollTop>this.offsetTop&&(e.scrollTop=this.offsetTop-e.offsetHeight)}render(e,t,r=[]){if(this.position=t,this.visible){const t=this.querySelectorAll("asct-instruction");let n=0;for(;n<t.length;n++){const s=t[n];n>=r.length?s.parentNode.removeChild(s):(s.index=e+n,s.render(r[n]))}for(;n<r.length;n++){const t=document.createElement("asct-instruction");t.index=e+n,this.appendChild(t),t.render(r[n])}this.nextElementSibling?this.updateDelta():this.previousElementSibling&&this.previousElementSibling.updateDelta(),this.selected&&this.createAddInstructionElement()}else if(this.childNodes.length>0){this.querySelectorAll("asct-instruction.selected").length>0||(this.innerHTML="")}return this}}customElements.define("asct-row",AudioSourceComposerTrackerRow);class AudioSourceComposerTrackerInstruction extends HTMLElement{constructor(){super()}get row(){return this.parentNode}get tracker(){if(!this.parentNode)throw new Error("Invalid tracker");return this.parentNode.tracker}get editor(){return this.tracker.editor}set index(e){this.setAttribute("i",e)}get index(){return parseInt(this.getAttribute("i"))}get selected(){return this.classList.contains("selected")}getInstruction(){return this.row.tracker.getInstruction(this.index)}play(){return this.editor.renderer.playInstructionAtIndex(this.tracker.groupName,this.index),this}connectedCallback(){}setCursor(){return this.tracker.querySelectorAll("asct-instruction.cursor,asct-instruction-add.cursor").forEach(e=>e.classList.remove("cursor")),this.classList.add("cursor"),this}select(e=!0,t=!0){if(e){if(t&&this.tracker.clearSelection([this,this.row]),this.selected)return void console.info("Already selected ",this);this.classList.add("selected"),this.row.select(e)}else{if(!this.selected)return void console.info("Already unselected ",this);this.classList.remove("selected")}return this.tracker.update(),this.parentNode.scrollTo(),this.render(),this}render(e=null){e=e||this.getInstruction();let t=this.querySelector("ascti-command")||document.createElement("ascti-command");if(this.appendChild(t),t.render(e),this.classList.contains("selected")){let t=this.querySelector("ascti-instrument")||document.createElement("ascti-instrument");this.appendChild(t),t.render(e);let r=this.querySelector("ascti-velocity")||document.createElement("ascti-velocity");this.appendChild(r),r.render(e);let n=this.querySelector("ascti-duration")||document.createElement("ascti-duration");this.appendChild(n),n.render(e)}else{let e=this.querySelector("ascti-instrument");e&&e.parentNode.removeChild(e);let t=this.querySelector("ascti-velocity");t&&t.parentNode.removeChild(t);let r=this.querySelector("ascti-duration");r&&r.parentNode.removeChild(r)}return this}}customElements.define("asct-instruction",AudioSourceComposerTrackerInstruction);class AudioSourceComposerTrackerInstructionAdd extends AudioSourceComposerTrackerInstruction{render(e=null){if(e)throw new Error("Invalid");return this.innerHTML="+",this}}customElements.define("asct-instruction-add",AudioSourceComposerTrackerInstructionAdd);class AudioSourceComposerTrackerParameter extends HTMLElement{constructor(){super()}get instruction(){return this.parentNode}get tracker(){return this.parentNode.parentNode.tracker}get editor(){return this.tracker.editor}connectedCallback(){}render(){this.innerHTML=this.editor.values.format(this.row.duration,"duration")}}class AudioSourceComposerParamCommand extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.command,"command")}}customElements.define("ascti-command",AudioSourceComposerParamCommand);class AudioSourceComposerParamInstrument extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.instrument,"instrument")}}customElements.define("ascti-instrument",AudioSourceComposerParamInstrument);class AudioSourceComposerParamVelocity extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.velocity,"velocity")}}customElements.define("ascti-velocity",AudioSourceComposerParamVelocity);class AudioSourceComposerTrackerDuration extends AudioSourceComposerTrackerParameter{render(e=null){e=e||this.instruction.getInstruction(),this.innerHTML=this.editor.values.format(e.duration,"duration")}}customElements.define("ascti-duration",AudioSourceComposerTrackerDuration);class AudioSourceComposerTrackerDelta extends HTMLElement{constructor(){super()}get editor(){return this.tracker.editor}get tracker(){return this.parentNode.tracker}get row(){return this.parentNode}connectedCallback(){}render(e){e=e||this.row?this.row.duration:-1,this.innerHTML=this.editor.values.format(e,"duration")}}customElements.define("asct-delta",AudioSourceComposerTrackerDelta);class AudioSourceComposerKeyboard{constructor(e){this.editor=e}get keyboardLayout(){return{2:"C#2",3:"D#2",5:"F#2",6:"G#2",7:"A#2",9:"C#3",0:"D#3",q:"C2",w:"D2",e:"E2",r:"F2",t:"G2",y:"A2",u:"B2",i:"C3",o:"D3",p:"E3",s:"C#1",d:"D#1",g:"F#1",h:"G#1",j:"A#1",l:"C#2",";":"D#2",z:"C1",x:"D1",c:"E1",v:"F1",b:"G1",n:"A1",m:"B1",",":"C2",".":"D2","/":"E2"}}getKeyboardCommand(e){const r=this.keyboardLayout;if(void 0===r[e])return null;const t=parseInt(this.editor.tracker.fieldRenderOctave.value)||1;let o=r[e];return o=(o=o.replace("2",t+1)).replace("1",t)}}class AudioSourceComposerMenu extends HTMLElement{constructor(){super(),this.action=(e=>{const t=!this.classList.contains("stick");if(this.classList.toggle("stick",t),t){this.classList.add("open");let e=this;for(;e=e.parentNode.closest("asc-menu");)e.classList.add("open","stick")}}),this.populate=function(){this.dispatchEvent(new CustomEvent("open"))},this.mouseTimeout=null}get caption(){return this.getAttribute("caption")}set caption(e){e?this.setAttribute("caption",e):this.removeAttribute("caption"),this.render()}get key(){return this.getAttribute("key")}set key(e){this.setAttribute("key",e),this.render()}get disabled(){return"true"==this.getAttribute("disabled")}set disabled(e){e?this.setAttribute("disabled","true"):this.removeAttribute("disabled")}get hasBreak(){return this.getAttribute("hasBreak")}set hasBreak(e){this.setAttribute("hasBreak",e),this.render()}connectedCallback(){this.addEventListener("mouseenter",this.onMouseEvent),this.addEventListener("mouseleave",this.onMouseEvent),this.addEventListener("click",this.onMouseEvent),this.render()}disconnectedCallback(){this.removeEventListener("mouseenter",this.onMouseEvent),this.removeEventListener("mouseleave",this.onMouseEvent),this.removeEventListener("click",this.onMouseEvent)}onMouseEvent(e){if(this.contains(e.target))switch(e.type){case"mouseenter":clearTimeout(this.mouseTimeout),this.classList.add("open"),this.renderSubMenu(e);break;case"mouseleave":this.classList.contains("stick")||(clearTimeout(this.mouseTimeout),this.mouseTimeout=setTimeout(e=>{this.classList.remove("open"),this.clearSubMenu()},200));break;case"click":e.defaultPrevented||(e.preventDefault(),this.closeAllMenus(),e.menuElement=this,this.action(e))}}clearSubMenu(){this.getSubMenuContainer().innerHTML=""}renderSubMenu(e){e.menuElement=this,this.populate(e)}getSubMenuContainer(){let e=this.querySelector(".dropdown-container");return e||((e=document.createElement("div")).classList.add("dropdown-container"),this.appendChild(e)),e}getOrCreateSubMenu(e,t=null){e=e.toString();let s=this.getSubMenuContainer();for(let t=0;t<s.childNodes.length;t++){const i=s.childNodes[t];if(i.matches("asc-menu")&&i.key===e)return i}const i=document.createElement("asc-menu");return i.key=e,t&&(i.caption=t),s.appendChild(i),i}openContextMenu(e){let t=e.clientX||e.detail.clientX,s=e.clientY||e.detail.clientY;this.clearSubMenu(),this.renderSubMenu(e);let i=this.getSubMenuContainer();console.info("Context menu ",i,t,s),i.classList.add("open-context-menu"),this.classList.add("open","stick"),i.style.left=t+"px",i.style.top=s+"px"}closeAllMenus(){let e=this;for(;e.parentElement&&e.parentElement.closest("asc-menu");)e=e.parentElement.closest("asc-menu");e.parentElement.querySelectorAll("asc-menu.open,asc-menu.stick").forEach(e=>e.classList.remove("open","stick"))}render(){const e=null===this.caption?this.key:this.caption;if(e){let t=this.querySelector("div");t||((t=document.createElement("div")).classList.add("caption"),this.firstElementChild?this.insertBefore(t,this.firstElementChild):this.appendChild(t)),t.innerHTML=e}if(this.hasBreak){let e=this.querySelector("hr");e||(e=document.createElement("hr"),this.firstElementChild?this.insertBefore(e,this.firstElementChild):this.appendChild(e))}}}customElements.define("asc-menu",AudioSourceComposerMenu);class AudioSourceComposerWebsocket{constructor(e){this.editor=e}initWebSocket(e){if(e||(e=null),!("WebSocket"in window))return void console.warn("WebSocket is not supported by your Browser!");this.webSocket&&(this.webSocket.close(),this.webSocket=null);const t=window.origin.replace(/^http/i,"ws")+"/song/"+(e||""),s=new WebSocket(t),o=this.onWebSocketEvent.bind(this);s.addEventListener("open",o),s.addEventListener("message",o),s.addEventListener("close",o),this.webSocket=s}loadSongFromServer(e){this.setAttribute("uuid",e),this.initWebSocket(e)}onError(e){this.webSocket&&this.webSocket.send(JSON.stringify({type:"error",message:e.message||e,stack:e.stack}))}onWebSocketEvent(e){switch(e.type){case"open":break;case"close":this.webSocketAttempts++,this.webSocketAttempts<=this.status.webSocket.maxAttempts?(setTimeout(()=>this.initWebSocket(),this.status.webSocket.reconnectTimeout),console.info("Reopening WebSocket in "+this.status.webSocket.reconnectTimeout/1e3+" seconds ("+this.webSocketAttempts+")")):console.info("Giving up on WebSocket");break;case"message":if("{"===e.data[0]){const t=JSON.parse(e.data);switch(t.type){case"history:entry":const e=editor.renderer;e.applyHistoryActions(t.songHistory),this.status.history.currentStep=t.songHistory[t.songHistory.length-1].step,this.player.loadAllInstruments(),this.render(),this.grid.focus();const s=e.songData.uuid;if(s){let t=JSON.parse(localStorage.getItem("server-recent-uuid")||"[]");(t=t.filter(e=>e[0]!==s)).unshift([s,e.songData.title,(new Date).getTime()]),localStorage.setItem("server-recent-uuid",JSON.stringify(t))}break;case"history:error":case"error":console.error("WS:"+t.message,t.stack);break;default:console.log("Unrecognized web socket event: "+t.type)}}else console.log("Unrecognized web socket message: "+e.data)}}}class AudioSourceValues{constructor(e){this.renderer=e}getValues(e,t){let r,n="";const s=this.renderer.getSongData()||{};switch(e){case"song-recent-list":const o=(new AudioSourceStorage).getRecentSongList();for(let e=0;e<o.length;e++)n+=t(o[e].guid,o[e].title);break;case"song-instruments":if(s.instruments){const e=s.instruments;for(let r=0;r<e.length;r++){const s=e[r]||{name:"No Instrument Loaded"};n+=t(r,this.renderer.values.format(r,"instrument")+": "+(s.name?s.name:s.url.split("/").pop()))}}break;case"instruments-available":const a=this.renderer.sources.getInstrumentLibrary();a&&a.instruments&&a.instruments.forEach(e=>{let r=e.url;r&&(r=new URL(r,a.url)+""),"object"!=typeof e&&(e={url:e}),e.title||(e.title=e.url.split("/").pop()),n+=t(r,e.title)});break;case"command-instrument-frequencies":for(let e=0;e<s.instruments.length;e++)if(this.renderer.isInstrumentLoaded(e)){const r=this.renderer.getInstrument(e);if(r.getFrequencyAliases){const s=r.getFrequencyAliases();Object.values(s).forEach(r=>n+=t(r,r,`data-instrument="${e}"`))}}break;case"note-frequencies":r=this.renderer.noteFrequencies;for(let e=0;e<r.length;e++){const s=r[e];n+=t(s,s)}break;case"note-frequencies-all":r=this.renderer.noteFrequencies;for(let e=1;e<=6;e++)for(let s=0;s<r.length;s++){const o=r[s]+e;n+=t(o,o)}break;case"note-frequency-octaves":for(let e=1;e<=7;e+=1)n+=t(e,""+e);break;case"velocities":for(let e=100;e>=0;e-=10)n+=t(e,e);break;case"durations":const i=this.renderer.getSongTimeDivision();for(let e=64;e>1;e/=2){let r=`1/${e}`;n+=t(1/e/1.5*i,`${r}t`),n+=t(1/e*i,`${r}`),n+=t(1/e*1.5*i,`${r}d`)}for(let e=1;e<=16;e++)n+=t(e*i,e+"B");break;case"named-durations":for(let e=64;e>1;e/=2){let r=`1/${e}`;n+=t(`${r}t`,`${r}t`),n+=t(`${r}`,`${r}`),n+=t(`${r}d`,`${r}d`)}for(let e=1;e<=16;e++)n+=t(e+"B",e+"B");break;case"beats-per-measure":for(let e=1;e<=12;e++)n+=t(e,e+` beat${e>1?"s":""} per measure`);break;case"beats-per-minute":for(let e=40;e<=300;e+=10)n+=t(e,e+` beat${e>1?"s":""} per minute`);break;case"groups":s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t(e,e)});break;case"command-group-execute":s.instructions&&Object.keys(s.instructions).forEach(function(e,r){n+=t("@"+e,"@"+e)});break;default:throw new Error("Invalid Value type: "+e)}return n}renderEditorFormOptions(e,t){let r="";return this.getValues(e,function(e,n,s=""){const o=!!t&&t(e);r+=`<option value="${e}" ${o?' selected="selected"':""}${s}>${n}</option>`}),r}format(e,t){switch(t){case"duration":let r;return this.getValues("durations",(t,n)=>{e!==t&&e!==n||(r=n)}),r?r:(e=parseFloat(e).toFixed(2)).replace(".00","t");case"instrument":return"number"!=typeof e?"N/A":e<10?"0"+e:""+e;case"velocity":return"number"!=typeof e?"N/A":100===e?"Max":e+"";case"command":return e;default:throw new Error("Unknown format: "+t)}}}class AudioSourceLibraries{constructor(){}get sources(){return{MidiParser:["https://cdn.jsdelivr.net/gh/colxi/midi-parser-js/src/main.js"],LZString:["https://cdn.jsdelivr.net/gh/pieroxy/lz-string/libs/lz-string.min.js"]}}async loadScript(r){await new Promise((i,t)=>{const s=document.createElement("script");s.src=r,s.onload=(r=>i()),document.head.appendChild(s)})}async loadLibrary(r,i=null){if(i||(i=(()=>void 0!==window[r])),i())return!0;const t=this.sources[r];for(let r=0;r<t.length;r++)if(await this.loadScript(t[r]),i())return!0;throw new Error(`Failed to load ${r} Library`)}async getMidiParser(){return await this.loadLibrary("MidiParser"),MidiParser}async getLZString(){return await this.loadLibrary("LZString"),LZString}}class AudioSourceRenderer{constructor(t=null){this.dispatchElement=t,this.audioContext=null,this.songData={},this.loadedInstruments=[],this.loadedInstrumentClasses={},this.seekLength=.5,this.seekPosition=0,this.volumeGain=null,this.playing=!1,this.activeGroups={},this.sources=new AudioSources(this),this.values=new AudioSourceValues(this),this.loadSongData({}),this.songHistory=[],document.addEventListener("instrument:loaded",t=>this.onSongEvent(t))}get noteFrequencies(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}getCommandFromMIDINote(t){const n=Math.floor(t/12),e=t%12;return this.noteFrequencies[e]+n}getAudioContext(){return this.audioContext?this.audioContext:(this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.initAllInstruments(this.audioContext),this.audioContext)}getSongData(){return this.songData}getSongTimeDivision(){return this.songData.timeDivision||384}getGroupTimeDivision(t){return this.getSongTimeDivision()}getSongHistory(){return this.songHistory}getStartingBeatsPerMinute(){return this.songData.beatsPerMinute}getVolumeGain(){if(!this.volumeGain){const t=this.getAudioContext();let n=t.createGain();n.gain.value=AudioSourceRenderer.DEFAULT_VOLUME,n.connect(t.destination),this.volumeGain=n}return this.volumeGain}getVolume(){return this.volumeGain?100*this.volumeGain.gain.value:100*AudioSourceRenderer.DEFAULT_VOLUME}setVolume(t){const n=this.getVolumeGain();n.gain.value!==t&&(n.gain.value=t/100,console.info("Setting volume: ",t))}dispatchEvent(t){this.dispatchElement&&this.dispatchElement.dispatchEvent(t)}onSongEvent(t){switch(t.type){case"instrument:loaded":const n=t.detail.class,e=t.detail.file;this.loadedInstrumentClasses[e]=n,this.loadAllInstruments()}}loadSongFromMIDIData(t){console.log(t);const n={};this.songData.instructions=n,this.songData.timeDivision=t.timeDivision,n.root=[];for(let e=0;e<t.track.length;e++){n.root.push([0,"@track"+e]);const r=e,i=[];n["track"+e]=i;const s={},o=t.track[e].event;let a=0,u=0;for(let t=0;t<o.length;t++){const n=o[t];switch(a+=n.deltaTime,n.type){case 8:let t=this.getCommandFromMIDINote(n.data[0]);if(s[t]){let e=a-s[t][0];s[t][1][3]=e,console.log("OFF",n.deltaTime,t,e),delete s[t]}break;case 9:let e=this.getCommandFromMIDINote(n.data[0]),o=n.data[1];if(0===o&&s[e]){let t=a-s[e][0];s[e][1][3]=t,console.log("OFF",n.deltaTime,e,t),delete s[e];break}let c=n.deltaTime+(a-u);u=a;const l=[c,e,r,0,o];s[e]=[a,l],i.push(l),console.log("ON ",c,e,o)}}}}loadSongData(t,n=[]){t=Object.assign({},{instruments:[],instructions:{root:[]}},t),this.songData=t,this.songHistory=n||[],Object.keys(t.instructions).map((t,n)=>this.processAllInstructionData(t));if(0===t.instruments.length);else for(let n=0;n<t.instruments.length;n++)t.instruments[n]&&(0,this.loadInstrument(n));this.dispatchEvent(new CustomEvent("song:loaded"))}processAllInstructionData(t){const n=this.songData.instructions[t];for(let t=0;t<n.length;t++){const e=n[t];n[t]=this.processInstructionData(e)}}processInstructionData(t){return SongInstruction.parse(t).data}findInstructionGroup(t){if(t instanceof SongInstruction&&(t=t.data),"object"!=typeof t)throw new Error("Invalid instruction object");for(let n in this.songData.instructions)if(this.songData.instructions.hasOwnProperty(n)&&-1!==this.songData.instructions[n].indexOf(t))return n;throw new Error("Instruction not found in songData")}getInstructions(t,n=null){let e=this.songData.instructions[t];if(!e)throw new Error("Instruction group not found: "+t);return n&&("number"==typeof n&&(n=[n]),e=e.filter((t,e)=>-1!==n.indexOf(e))),e.map(t=>new SongInstruction(t))}getInstructionRange(t,n,e=null){let r=this.songData.instructions[t];if(!r)throw new Error("Instruction group not found: "+t);const i=[];for(let t=n;(null===e||t<e)&&r[t];t++){const n=new SongInstruction(r[t]);if(i.length>0&&null===e&&n.deltaDuration)break;i.push(n)}return i}getInstructionIndex(t,n){t instanceof SongInstruction&&(t=t.data);const e=this.songData.instructions[n].indexOf(t);if(-1===e)throw new Error("Instruction not found in instruction list");return e}getInstruction(t,n,e=!0){let r=this.songData.instructions[t];if(!Number.isInteger(n))throw new Error("Invalid Index: "+typeof n);if(e){if(n>=r.length)throw new Error(`Instruction index is greater than group length: ${n} >= ${r.length} for groupName: ${t}`);if(!r[n])throw new Error(`Instruction not found at index: ${n} for groupName: ${t}`)}return new SongInstruction(r[n])}async play(t){this.seekPosition=t||0;const n=this.getAudioContext().currentTime-this.seekPosition;this.playing=!0,this.dispatchEvent(new CustomEvent("song:start")),await this.playInstructions(this.songData.root||"root",n),this.seekPosition=this.getAudioContext().currentTime-(this.seekPosition+n),this.dispatchEvent(new CustomEvent("song:end")),console.log("Seek position: ",this.seekPosition)}pause(){this.playing=!1,this.dispatchEvent(new CustomEvent("song:pause"))}stopAllPlayback(){for(const t in this.activeGroups)this.activeGroups.hasOwnProperty(t)&&(this.activeGroups[t]=!1)}isPlaybackActive(){for(const t in this.activeGroups)if(this.activeGroups.hasOwnProperty(t)&&!0===this.activeGroups[t])return!0;return!1}async playInstructions(t,n){const e=t+n;this.activeGroups[e]=!0,console.time("Group:"+t),n=n||this.getAudioContext().currentTime;const r=[];await this.eachInstructionAsync(t,async(i,s,o)=>{if(!this.activeGroups[e])return!1;const a=this.getAudioContext().currentTime-n;if(a+this.seekLength<o.groupPlaybackTime){const t=Math.floor(1e3*(o.groupPlaybackTime-(a+this.seekLength))*.9);await new Promise((n,e)=>{setTimeout(n,t)})}if(s.isGroupCommand()){let e=s.getGroupFromCommand();if(!this.songData.instructions[e])throw new Error("Instruction groupName not found: "+e);if(e===t)return void console.error("Recursive group call. Skipping group '"+e+"'");const i=this.playInstructions(e,n+o.groupPlaybackTime);r.push(i)}else this.playInstruction(s,n+o.groupPlaybackTime,o)});for(let t=0;t<r.length;t++)await r[t];delete this.activeGroups[e],console.timeEnd("Group:"+t)}eachInstruction(t,n,e){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const r=new InstructionIterator(this.songData.instructions[t],t,e?e.timeDivision:this.getSongTimeDivision(),e?e.currentBPM:this.getStartingBeatsPerMinute(),e?e.groupPositionInTicks:0);let i=r.nextInstruction();for(;i;){if(!1===n(r.currentIndex,i,r))break;i=r.nextInstruction()}return r.groupPlaybackTime}async eachInstructionAsync(t,n,e){if(!this.songData.instructions[t])throw new Error("Invalid group: "+t);const r=new InstructionIterator(this.songData.instructions[t],t,e?e.timeDivision:this.getSongTimeDivision(),e?e.currentBPM:this.getStartingBeatsPerMinute(),e?e.groupPositionInTicks:0);let i=r.nextInstruction();for(;i;){if(!1===await n(r.currentIndex,i,r))break;i=r.nextInstruction()}return r.groupPlaybackTime}playInstructionAtIndex(t,n,e=null,r=null){const i=this.getInstruction(t,n);this.playInstruction(i,e,r)}async playInstruction(t,n=null,e=null){if(Array.isArray(t)&&(t=new SongInstruction(t)),t.isGroupCommand())return await this.playInstructions(t.getGroupFromCommand(),n);let r=this.getStartingBeatsPerMinute();e&&(r=e.currentBPM);let i=this.getSongTimeDivision();const s=t.getDurationAsTicks(i)/i/(r/60);n||0===n||(n=this.getAudioContext().currentTime),this.playInstrument(t.instrument,t.command,n,s,t.velocity);const o={currentTime:this.getAudioContext().currentTime,startTime:n,duration:s,instruction:t,stats:e||{}};this.dispatchEvent(new CustomEvent("note:play",{detail:o}))}playInstrument(t,n,e,r,i){if(t||0===t||(console.warn("No instrument set for instruction. Using instrument 0"),t=0),!this.songData.instruments[t])return void console.error(`Instrument ${t} is not loaded. Playback skipped. `);let s=this.getInstrument(t);const o=this.getVolumeGain();return s.play(o,n,e,r,i)}getInstrumentConfig(t,n=!0){const e=this.getInstrumentList();if(e[t])return e[t];if(n)throw new Error("Instrument ID not found: "+t);return null}getInstrument(t,n=!0){if(this.loadedInstruments[t])return this.loadedInstruments[t];if(n)throw new Error("Instrument not yet loaded: "+t);return null}getInstrumentList(){return this.getSongData().instruments.slice()}loadInstrumentClass(t){const n=(t=new URL(t,document.location)).pathname.split("/").pop();if(void 0!==this.loadedInstrumentClasses[n]){if(null!==this.loadedInstrumentClasses[n])throw new Error("Instrument class is already loaded: "+n);return void console.warn("Instrument class is loading: "+n)}this.loadedInstrumentClasses[n]=null;const e=document.createElement("script");e.src=t,document.head.appendChild(e)}loadInstrument(t,n=!1){if(t=parseInt(t),!n&&this.loadedInstruments[t])return!0;this.loadedInstruments[t]=null;const e=this.getInstrumentConfig(t);if(!e.url)throw new Error("Invalid instrument URL");const r=new URL(e.url,document.location),i=r.pathname.split("/").pop(),s=this.loadedInstrumentClasses[i];if(!s)return this.loadInstrumentClass(r),!1;const o=new s(e,this);return this.loadedInstruments[t]=o,this.dispatchEvent(new CustomEvent("instrument:instance",{detail:{instance:o,instrumentID:t},bubbles:!0})),this.audioContext&&this.initInstrument(t,this.audioContext),!0}loadAllInstruments(){const t=this.getInstrumentList();for(let n=0;n<t.length;n++)t[n]&&this.loadInstrument(n)}initInstrument(t,n){this.getInstrument(t).init(n)}initAllInstruments(t){const n=this.getInstrumentList();for(let e=0;e<n.length;e++)this.initInstrument(e,t)}generateGUID(){var t=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(t+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(n){var e=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===n?e:3&e|8).toString(16)})}generateInstructionGroupName(t){const n=this.getSongData();let e;for(let r=99;r>=0;r--){const i=t+"."+r;n.instructions.hasOwnProperty(i)||(e=i)}if(!e)throw new Error("Failed to generate group name");return e}setSongTitle(t){return this.replaceDataPath("title",t)}setSongVersion(t){return this.replaceDataPath("version",t)}addInstrument(t){"object"!=typeof t&&(t={url:t});const n=this.songData.instruments.length;return this.replaceDataPath(["instruments",n],t),this.loadInstrument(n),this.dispatchEvent(new CustomEvent("instrument:modified",{detail:{instrumentID:n,config:t,oldConfig:null}}),1),n}replaceInstrument(t,n){const e=this.songData.instruments;if(e.length<=t)throw new Error("Invalid instrument ID: "+t);const r=e[t];"object"!=typeof n&&(n={url:n}),r&&r.name&&!n.name&&(n.name=r.name);const i=this.replaceDataPath(["instruments",t],n).oldData;return this.dispatchEvent(new CustomEvent("instrument:modified",{detail:{instrumentID:t,config:n,oldConfig:i}}),1),this.loadInstrument(t),i}removeInstrument(t){if(!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);delete this.loadedInstruments[t];const n=this.replaceDataPath(["instruments",t],null).oldData;return this.dispatchEvent(new CustomEvent("instrument:modified",{detail:{instrumentID:t,config:null,oldConfig:n}}),1),n}replaceInstrumentParam(t,n,e){if(t=parseInt(t),!this.songData.instruments[t])throw new Error("Invalid instrument ID: "+t);return Array.isArray(n)||(n=[n]),n.unshift(t),n.unshift("instruments"),this.replaceDataPath(n,e).oldData}isInstrumentLoaded(t){return!!this.loadedInstruments[t]}applyHistoryActions(t){for(let n=0;n<t.length;n++){const e=t[n];switch(e.action){case"reset":Object.assign(this.songData,e.data);break;case"insert":this.insertDataPath(e.path,e.data);break;case"delete":this.deleteDataPath(e.path);break;case"replace":this.replaceDataPath(e.path,e.data)}}this.songHistory=[],this.processAllInstructionData()}findDataPath(t){if(!Array.isArray(t))throw new Error("Path list must be an array");if("*"===t[0])return{value:this.songData,parent:{key:this.songData},key:"key"};let n,e=this.songData,r=null;for(let i=0;i<t.length;i++)r=t[i],/^\d+$/.test(r)&&(r=parseInt(r)),n=e,e=e[r];if(!n)throw new Error("Invalid path: "+path);return{value:e,parent:n,key:r}}insertDataPath(t,n){const e=this.findDataPath(t);if(n=AudioSourceRenderer.sanitizeInput(n),"number"!=typeof e.key)throw new Error("Insert action requires numeric key");if(e.parent.length<e.key)throw new Error(`Insert position out of index: ${e.parent.length} < ${e.key} for path: ${t}`);return e.parent.splice(e.key,0,n),this.queueHistoryAction(t,n)}deleteDataPath(t){const n=this.findDataPath(t),e=n.parent[n.key];if("number"==typeof n.key){if(n.parent.length<n.key)throw new Error(`Delete position out of index: ${n.parent.length} < ${n.key} for path: ${t}`);n.parent.splice(n.key,1)}else delete n.parent[n.key];return this.queueHistoryAction(t,null,e)}replaceDataPath(t,n){const e=this.findDataPath(t);if(void 0===n)return this.deleteDataPath(t);let r=null;return n=AudioSourceRenderer.sanitizeInput(n),void 0!==e.parent[e.key]&&(r=e.parent[e.key]),e.parent[e.key]=n,this.queueHistoryAction(t,n,r)}queueHistoryAction(t,n=null,e=null){const r=[t];return null===n&&null===e||r.push(n),null!==e&&r.push(e),this.songHistory.push(r),this.dispatchEvent(new CustomEvent("song:modified",{detail:r}),1),r}insertInstructionAtPosition(t,n,e){if(!e)throw new Error("Invalid insert instruction");const r=SongInstruction.parse(e);let i=this.songData.instructions[t];const s=new InstructionIterator(this.songData.instructions[t],t,this.getSongTimeDivision());let o;for(;o=s.nextInstruction();){if(s.groupPositionInTicks>n){const e=[n-(s.groupPositionInTicks-o.deltaDuration),s.groupPositionInTicks-n],i=s.currentIndex;return this.replaceInstructionDeltaDuration(t,i,e[1]),r.deltaDuration=e[0],this.insertInstructionAtIndex(t,i,r),i}if(s.groupPositionInTicks===n){let n;for(n=s.currentIndex+1;n<i.length&&!(new SongInstruction(i[n]).deltaDuration>0);n++);return this.insertInstructionAtIndex(t,n,r),n}}if(n<=s.groupPositionInTicks)throw new Error("Something went wrong");let a=i.length;return r.deltaDuration=n-s.groupPositionInTicks,this.insertInstructionAtIndex(t,a,r),a}insertInstructionAtIndex(t,n,e){if(e instanceof SongInstruction&&(e=e.data),!e)throw new Error("Invalid insert instruction");this.insertDataPath(["instructions",t,n],e)}deleteInstructionAtIndex(t,n){const e=this.getInstruction(t,n);if(e.deltaDuration>0){const r=this.getInstruction(t,n+1);r&&this.replaceInstructionDeltaDuration(t,n+1,r.deltaDuration+e.deltaDuration)}return this.deleteDataPath(["instructions",t,n]).oldData}replaceInstructionDeltaDuration(t,n,e){return this.replaceInstructionParam(t,n,0,e)}replaceInstructionCommand(t,n,e){return this.replaceInstructionParam(t,n,1,e)}replaceInstructionInstrument(t,n,e){return this.replaceInstructionParam(t,n,2,e)}replaceInstructionDuration(t,n,e){return this.replaceInstructionParam(t,n,3,e)}replaceInstructionVelocity(t,n,e){if(!Number.isInteger(e))throw new Error("Velocity must be an integer: "+e);if(e<0)throw new Error("Velocity must be a positive integer: "+e);return this.replaceInstructionParam(t,n,4,e)}replaceInstructionParam(t,n,e,r){return null===r?this.deleteDataPath(["instructions",t,n,e]).oldData:this.replaceDataPath(["instructions",t,n,e],r).oldData}addInstructionGroup(t,n){if(this.songData.instructions.hasOwnProperty(t))throw new Error("New group already exists: "+t);this.replaceDataPath(["instructions",t],n||[])}removeInstructionGroup(t){if("root"===t)throw new Error("Cannot remove root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);return this.replaceDataPath(["instructions",t]).oldData}renameInstructionGroup(t,n){if("root"===t)throw new Error("Cannot rename root instruction group, n00b");if(!this.songData.instructions.hasOwnProperty(t))throw new Error("Existing group not found: "+t);if(this.songData.instructions.hasOwnProperty(n))throw new Error("New group already exists: "+n);const e=this.replaceDataPath(["instructions",t]).oldData;this.replaceDataPath(["instructions",n],e)}static sanitizeInput(t){if(Array.isArray(t)){for(let n=0;n<t.length;n++)t[n]=AudioSourceRenderer.sanitizeInput(t[n]);return t}if("object"==typeof t){for(const n in t)t.hasOwnProperty(n)&&(t[n]=AudioSourceRenderer.sanitizeInput(t[n]));return t}if("string"!=typeof t)return t;if("undefined"!=typeof require){var n=new(require("bad-words"));if(n.isProfane(t))throw new Error("Swear words are forbidden");t=n.clean(t)}var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>'"]/g,function(t){return e[t]})}onInput(t){t.defaultPrevented||t.type}}AudioSourceRenderer.DEFAULT_VOLUME=.7;class SongInstruction{constructor(t){this.data=t||[0,"",0]}get deltaDuration(){return this.data[0]}set deltaDuration(t){this.data[0]=SongInstruction.parseDurationAsTicks(t)}get command(){return this.data[1]||null}set command(t){this.data[1]=t}get instrument(){return void 0===this.data[2]?null:this.data[2]}set instrument(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Instrument ID");this.data[2]=t}get duration(){return void 0===this.data[3]?null:this.data[3]}set duration(t){if(t=parseFloat(t),Number.isNaN(t))throw new Error("Invalid Duration");this.data[3]=t}getDurationAsTicks(t){return SongInstruction.parseDurationAsTicks(this.duration,t)}get velocity(){return void 0===this.data[4]?null:this.data[4]}set velocity(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Velocity");this.data[4]=t}get panning(){return void 0===this.data[5]?null:this.data[5]}set panning(t){if(t=parseInt(t),Number.isNaN(t))throw new Error("Invalid Panning");this.data[5]=t}isGroupCommand(){return this.command&&"@"===this.command[0]}getGroupFromCommand(){return this.command.substr(1)}static parse(t){return t instanceof SongInstruction?t:("number"==typeof t&&(t=[t]),"string"==typeof t&&((t=t.split(":"))[0]=parseFloat(t[0]),t[1]=parseInt(t[1])),"string"==typeof t[0]&&t.unshift(0),new SongInstruction(t))}static parseDurationAsTicks(t,n){if(null===t||"number"==typeof t)return t;switch(t[t.length-1].toLowerCase()){case"t":return parseInt(t.substr(0,t.length-1));case"b":return n*parseInt(t.substr(0,t.length-1))}throw new Error("Invalid Duration: "+t)}}class InstructionIterator{constructor(t,n,e,r,i=0){this.instructionList=t,this.groupName=n,this.timeDivision=e,this.currentBPM=r,this.groupPositionInTicks=i,this.groupPlaybackTime=0,this.currentIndex=-1}nextInstruction(){if(this.currentIndex++,!this.instructionList[this.currentIndex])return null;let t=new SongInstruction(this.instructionList[this.currentIndex]);if(t.deltaDuration){this.groupPositionInTicks+=t.deltaDuration;const n=t.deltaDuration/this.timeDivision/(this.currentBPM/60);this.groupPlaybackTime+=n}return t}}class AudioSourceStorage{constructor(){}async getRecentSongList(){return await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}generateDefaultSong(e=""){return{title:`Untitled (${(new Date).toJSON().slice(0,10).replace(/-/g,"/")})`,guid:this.generateGUID(),version:"0.0.1",root:"root",created:(new Date).getTime(),timeDivision:384,beatsPerMinute:120,beatsPerMeasure:4,instruments:[{url:e+"instrument/audio-source-synthesizer.js"}],instructions:{root:[]}}}async encodeForStorage(e,t=null,r=null){let o=JSON.stringify(e,t,r);const n=new AudioSourceLibraries;return(await n.getLZString()).compress(o)}async decodeForStorage(e){if(!e)return null;const t=new AudioSourceLibraries;return e=(await t.getLZString()).decompress(e)||e,JSON.parse(e)}async saveSongToMemory(e,t){e.guid||(e.guid=this.generateGUID());let r=[];try{r=await this.decodeForStorage(localStorage.getItem("song-recent-list")||"[]")}catch(e){console.error(e)}(r=r.filter(t=>t.guid!==e.guid)).unshift({guid:e.guid,title:e.title}),localStorage.setItem("song-recent-list",await this.encodeForStorage(r)),localStorage.setItem("song:"+e.guid,await this.encodeForStorage(e)),localStorage.setItem("song-history:"+e.guid,await this.encodeForStorage(t)),console.info("Song saved to memory: "+e.guid,e)}saveSongToFile(e){const t="/** INSTRUCTIONS-"+this.generateGUID()+" **/";let r=JSON.stringify(e.instructions),o=JSON.stringify(Object.assign({},e,{instructions:t}),null,"\t");o=o.replace('"'+t+'"',r);const n="data:text/json;charset=utf-8,"+encodeURIComponent(o),a=document.createElement("a");a.setAttribute("href",n),a.setAttribute("download",e.title||"untitled"),document.body.appendChild(a),a.click(),a.remove()}async loadSongFromMemory(e){let t=localStorage.getItem("song:"+e);if(!t)throw new Error("Song Data not found for guid: "+e);let r=await this.decodeForStorage(t);if(!r)throw new Error("Invalid Song Data: "+t);return r}async loadSongHistoryFromMemory(e){let t=localStorage.getItem("song-history:"+e);return t?await this.decodeForStorage(t):null}async loadMIDIFile(e){"undefined"==typeof MidiParser&&await new Promise((e,t)=>{const r=document.createElement("script");r.src="https://cdn.jsdelivr.net/gh/colxi/midi-parser-js/src/main.js",r.onload=(t=>e()),document.head.appendChild(r)});const t=await new Promise((t,r)=>{let o=new FileReader;o.readAsArrayBuffer(e.files[0]),o.onload=(e=>{t(e.target.result)})});return MidiParser.parse(new Uint8Array(t))}generateGUID(){var e=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var r=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?r:3&r|8).toString(16)})}}class AudioSources{constructor(r){this.editor=r,this.instrumentLibrary={name:"Loading Instrument Library...",instruments:[{name:"Loading instrument list...",url:""}]}}get DEFAULT_INSTRUMENT_LIBRARY_URL(){return this.getScriptDirectory("instrument/instrument.library.json")}getScriptDirectory(r=""){return document.head.querySelector('script[src$="audio-source-composer-element.js"],script[src$="audio-source-composer.min.js"]').src.split("/").slice(0,-2).join("/")+"/"+r}getInstrumentLibrary(){return this.instrumentLibrary}async loadDefaultInstrumentLibrary(){return await this.loadInstrumentLibrary(this.DEFAULT_INSTRUMENT_LIBRARY_URL)}async loadInstrumentLibrary(r,t=!1){if(!r)throw new Error("Invalid url");return r=new URL(r,document.location)+"",!t&&this.instrumentLibrary&&this.instrumentLibrary.url===r?this.instrumentLibrary:new Promise((t,n)=>{const e=new XMLHttpRequest;e.open("GET",r+"",!0),e.responseType="json",e.onload=(()=>{if(200!==e.status)return n("Sample library not found: "+r);this.instrumentLibrary=e.response,this.instrumentLibrary.url=r+"",this.editor.dispatchEvent(new CustomEvent("instrument:library",{})),console.info("Instrument Library Loaded: ",this.instrumentLibrary),t(this.instrumentLibrary)}),e.send()})}}})();